package com.example.firstapp;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.res.AssetFileDescriptor;
import android.content.res.AssetManager;
import android.media.AudioFormat;
import android.media.AudioRecord;
import android.media.MediaPlayer;
import android.media.MediaRecorder;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.chaquo.python.PyObject;
import com.chaquo.python.Python;
import com.chaquo.python.android.AndroidPlatform;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.util.Arrays;
import java.util.UUID;

import org.tensorflow.lite.Interpreter;

public class MainActivity extends AppCompatActivity {

    private static final String SNORE_PREDICTION_MODEL_PATH = "snore_predict.tflite";
    private static final String VGG_EXTRACT_MODEL_PATH = "vggish_feature_extraction_model.tflite";

    TextView textView;
    Button btnStart, btnStop, btnPredict;
    String pathSave = "/sdcard/JerrySnorePrediction";

    final int REQUEST_PERMISSION_CODE = 1000;


    // AudioRecorder variables
    private static final int RECORDER_SAMPLERATE = 16000;
    private static final int RECORDER_CHANNELS = AudioFormat.CHANNEL_IN_MONO;
    private static final int RECORDER_AUDIO_ENCODING = AudioFormat.ENCODING_PCM_16BIT;
    private AudioRecord recorder = null;
    private Thread recordingThread = null;
    private boolean isRecording = false;
    int BufferElements2Rec = 1024; // want to play 2048 (2K) since 2 bytes we use only 1024
    int BytesPerElement = 2; // 2 bytes in 16bit format


    @RequiresApi(api = Build.VERSION_CODES.KITKAT)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        System.out.println("Jerry First test");

        // Init View
        btnStart = (Button)findViewById(R.id.btnStart);
        btnStop = (Button)findViewById(R.id.btnStop);
        btnPredict = (Button)findViewById(R.id.btnPredict);

        enableButtons(false);

        int bufferSize = AudioRecord.getMinBufferSize(RECORDER_SAMPLERATE,
                RECORDER_CHANNELS, RECORDER_AUDIO_ENCODING);

        if (checkPermissionFromDevice()){
            btnStart.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    enableButtons(true);
                    startRecording();
                }
            });

            btnStop.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    enableButtons(false);
                    stopRecording();
                }
            });

            btnPredict.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    // Generate WAV from PCM first
                    File f1 = new File(pathSave+".pcm"); // The location of your PCM file
                    File f2 = new File(pathSave+".wav"); // The location where you want your WAV file
                    try {
                        rawToWave(f1, f2);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    try {
                        audioToPrediction(pathSave+".wav");
//                        audioToPrediction("/sdcard/test.wav");
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            });

        }else{
            requestPermission();
        }


//        try {
//            audioToPrediction("/sdcard/test.wav");
//        } catch (IOException e) {
//            e.printStackTrace();
//        }


    }

    @RequiresApi(api = Build.VERSION_CODES.KITKAT)
    public void audioToPrediction(String wav) throws IOException {
        System.out.println("Jerry MainActivity.java: start testAudioToPrediction()");
        // Use it everytime before python call
        if (! Python.isStarted()) {
            Python.start(new AndroidPlatform(this));
        }
        Python py = Python.getInstance();
        PyObject vgg_input = py.getModule("vggish_input"); // here write the name of the python file, in this case, my file is hello.py
        PyObject py_examples_batch = vgg_input.callAttr("wavfile_to_examples", wav); // here write the function name
        float[][][] examples_batch = py_examples_batch.toJava(float[][][].class);
        System.out.println(examples_batch.length);
        float[][] embedding_batch = new float[examples_batch.length][128];
        System.out.println("Jerry MainActivity.java: before loading tflite");
        try (Interpreter tflite_vgg_extraction = new Interpreter(loadModelFile(getAssets(), VGG_EXTRACT_MODEL_PATH))) {
            for (int i = 0; i < examples_batch.length; i++){
                float[][][] input = {examples_batch[i]};
                float[][] output = new float[1][128];
                tflite_vgg_extraction.run(input, output);
                embedding_batch[i] = output[0];
            }
            tflite_vgg_extraction.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.out.println("Jerry MainActivity.java: finished extracting vgg features");


        PyObject vgg_postprocess = py.getModule("vggish_postprocess"); // here write the name of the python file, in this case, my file is hello.py
        PyObject py_postprocessed = vgg_postprocess.callAttr("postprocess", new float[][][]{embedding_batch}); // here write the function name
        System.out.println("Jerry wavfile_to_examples");
        float[][] postprocessed_batch = py_postprocessed.toJava(float[][].class);
        System.out.println(Arrays.deepToString(postprocessed_batch));


        float[] prediction = new float[postprocessed_batch.length];
        try (Interpreter tflite_snore_prediction = new Interpreter(loadModelFile(getAssets(), SNORE_PREDICTION_MODEL_PATH))) {
            System.out.println("Jerry MainActivity.java: after loading prediction tflite");
            for (int i = 0; i < postprocessed_batch.length; i++){
                float[][] input = {postprocessed_batch[i]};
                float[][] output = new float[1][2];
                tflite_snore_prediction.run(input, output);
                prediction[i] = output[0][1];
            }
            tflite_snore_prediction.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.out.println(Arrays.toString(prediction));
        float[] multi_pred = frameMultiSeconds(prediction, 2);
        System.out.println(Arrays.toString(multi_pred));
        System.out.println("Jerry MainActivity.java: audioToPrediction()");
        textView = findViewById(R.id.predictText);
        textView.setText(Arrays.toString(multi_pred));


//         Test snore prediction model
//        float[][] input = {{0.1765f,0.2471f,0.6f,0.3569f,0.5725f,0.6118f,0.1373f,0.6275f,0.2471f,0.8431f,0.302f,0.051f,0.6549f,0.302f,0.4784f,0.9059f,1.0f,0.6078f,0.0f,0.8863f,0.5608f,0.3333f,0.7765f,0.0039f,0.5216f,0.5922f,0.5765f,0.3725f,0.4902f,0.5294f,0.6902f,0.9059f,0.2431f,0.502f,0.4902f,0.3686f,0.0f,0.3255f,0.502f,0.6f,0.7333f,0.5137f,0.1255f,0.1647f,0.1608f,0.2745f,0.6157f,0.5255f,1.0f,0.6392f,0.549f,0.0431f,0.4235f,0.2353f,0.1137f,0.698f,0.2627f,0.9373f,0.7843f,0.8863f,0.1686f,0.8549f,0.3922f,0.5804f,0.3255f,0.7294f,0.5961f,0.2f,0.7294f,0.2196f,1.0f,0.3647f,0.5765f,0.5961f,0.8235f,0.3922f,0.5843f,0.4706f,0.3765f,0.3529f,0.1922f,0.5843f,0.2941f,0.3922f,0.1294f,1.0f,0.6f,0.3529f,0.7608f,0.3255f,0.8275f,0.4196f,0.7922f,0.0f,0.3804f,0.3804f,0.2431f,0.1765f,0.6941f,0.1686f,0.2f,0.2588f,0.0f,0.5725f,0.6431f,0.4549f,0.7686f,0.451f,0.902f,0.3843f,0.1608f,0.5216f,0.0f,0.6196f,0.7216f,0.2235f,0.4353f,0.2784f,0.8f,0.0f,0.5294f,0.6235f,0.0f,0.5569f,0.4039f,0.4549f,0.0157f,0.8471f }};
////        float[][] output = {{0f,1f}};
//        float[][] output = new float[1][2];
//        try (Interpreter tflite_snore_prediction = new Interpreter(loadModelFile(getAssets(), SNORE_PREDICTION_MODEL_PATH))) {
//            System.out.println("Jerry MainActivity.java: after loading tflite");
//            tflite_snore_prediction.run(input, output);
//        }
//        System.out.println(Arrays.deepToString(output));
//        System.out.println("Jerry MainActivity.java: finish tflite testing");


//        // Test VGG extraction model
//        float[][][] input = {{{1.2967f,0.7515f,0.2738f,0.883f,0.7405f,-0.1216f,0.4266f,0.1995f,0.8831f,0.9095f,0.3699f,0.7979f,1.2595f,1.1148f,0.0172f,0.3062f,0.4991f,0.6404f,0.8249f,0.4043f,0.298f,1.0431f,1.1508f,0.8791f,0.4949f,0.5375f,0.4293f,0.0373f,-0.1693f,0.3399f,-0.7006f,-0.384f,0.1364f,0.2795f,0.5085f,0.1438f,0.2161f,0.0164f,0.0004f,0.2251f,0.3943f,-0.1457f,-0.2666f,0.2243f,0.6555f,0.5574f,0.6033f,0.7066f,0.8514f,0.5948f,0.87f,0.2307f,-0.1166f,-1.6195f,-3.6138f,-3.6069f,-4.5218f,-4.4249f,-3.8696f,-3.1804f,-2.3606f,-2.1671f,-3.8065f,-4.2091f},{1.1411f,0.5002f,0.6709f,0.8587f,1.0437f,0.7955f,-0.2768f,-0.8137f,-0.2587f,-1.2668f,-1.1205f,-0.0103f,0.1668f,0.0628f,0.6053f,1.0522f,0.2375f,0.4117f,0.3902f,0.513f,1.0788f,0.653f,0.2807f,0.9397f,0.6726f,0.7741f,0.3891f,-0.1f,-0.2191f,0.2948f,-0.5235f,-0.0788f,-0.2153f,-0.2207f,-0.1897f,0.1159f,-0.5104f,-0.1071f,-0.2069f,-0.3456f,0.1885f,-0.1119f,-0.3165f,0.4225f,0.648f,0.3298f,0.6639f,0.5688f,0.9417f,1.1012f,0.5713f,0.3449f,-0.8078f,-1.8369f,-3.2842f,-3.8016f,-4.5274f,-4.3108f,-4.0443f,-3.2182f,-1.8995f,-2.5281f,-3.8485f,-4.2717f},{1.0026f,0.7481f,0.2335f,-0.0719f,-0.1382f,0.0692f,0.8448f,1.2408f,1.5157f,1.1793f,0.22f,-0.0301f,0.4221f,0.3453f,0.1714f,0.2649f,1.0781f,1.158f,1.0496f,1.2262f,1.008f,0.8909f,0.6344f,0.6047f,0.2289f,0.1042f,-0.0609f,0.0445f,0.2279f,0.2993f,-0.3454f,-0.2695f,-0.8284f,-0.0869f,0.2484f,-0.1439f,-0.362f,-0.1088f,0.1576f,0.2787f,0.2212f,0.2467f,-0.0457f,-0.5082f,0.2536f,0.1581f,-0.0321f,0.5092f,0.4723f,0.0838f,0.5825f,0.0138f,-0.4443f,-1.5384f,-3.3466f,-4.0238f,-4.5435f,-4.0834f,-3.935f,-3.1254f,-2.0092f,-2.1508f,-3.9657f,-4.2815f},{-0.4043f,0.0754f,0.434f,-0.2357f,-0.5442f,0.2078f,0.7163f,0.7994f,0.7462f,0.841f,0.1588f,-0.1806f,0.4742f,0.493f,0.4406f,0.9741f,0.9964f,0.8539f,0.4383f,0.9435f,0.6373f,0.2646f,0.7042f,1.3906f,0.8954f,0.3796f,0.1874f,0.0143f,0.1031f,-0.6013f,-0.2506f,-0.0282f,0.5531f,0.1179f,0.2326f,0.2944f,-0.1121f,-0.6043f,0.3258f,0.2645f,0.608f,0.5056f,0.1657f,0.5482f,0.6876f,0.7601f,0.3108f,0.7725f,1.4825f,0.9141f,0.7771f,0.2765f,-0.2433f,-1.5746f,-3.2546f,-3.7153f,-4.4858f,-4.0703f,-3.9463f,-3.2813f,-2.0153f,-2.1381f,-3.8483f,-4.1994f},{1.2943f,1.2337f,0.9641f,0.4309f,-0.0471f,0.0475f,-0.2289f,-0.5537f,0.2003f,0.7178f,0.6344f,0.7916f,0.4653f,0.9072f,1.3819f,0.5803f,-0.1171f,0.858f,1.3252f,0.7383f,0.3204f,0.3231f,0.7318f,0.6736f,0.9108f,0.3838f,-0.4744f,-0.6081f,0.7329f,0.4472f,-0.2098f,-0.2335f,0.1613f,-0.4295f,-0.3012f,0.254f,0.5597f,0.3413f,-0.0599f,0.2326f,0.7332f,0.0526f,-0.0356f,0.1711f,0.747f,0.9941f,0.8709f,0.8689f,1.1936f,0.8024f,0.4484f,0.4887f,-0.1675f,-1.5765f,-3.5877f,-3.5178f,-4.4517f,-4.245f,-4.0153f,-3.7615f,-2.1547f,-2.085f,-3.8148f,-4.229f},{-0.8267f,-1.2321f,0.4158f,0.8153f,0.5429f,0.4815f,0.4422f,0.825f,1.2391f,1.0627f,0.5986f,0.3182f,0.1121f,0.6671f,1.2332f,1.1699f,0.5731f,0.2583f,0.17f,0.0556f,0.3396f,0.7786f,0.8798f,0.7095f,0.9359f,0.5583f,-0.2051f,0.1742f,0.727f,0.7534f,-0.4434f,0.1307f,-0.698f,-0.4552f,-0.6307f,-0.7293f,-0.2378f,0.0179f,-0.1385f,0.2044f,-0.4131f,0.4288f,0.2916f,0.2777f,0.4f,0.8103f,0.2325f,0.7818f,1.2265f,0.8276f,0.598f,0.2555f,0.094f,-1.43f,-3.6825f,-3.773f,-4.4899f,-4.2426f,-4.0762f,-3.8223f,-2.1406f,-2.494f,-3.8223f,-4.0575f},{0.5682f,0.7042f,0.6766f,1.0235f,0.8576f,0.7985f,0.5377f,0.0747f,0.4368f,0.8569f,1.1279f,0.3475f,0.4955f,0.6436f,-0.2899f,-0.0329f,0.5124f,0.1794f,0.2578f,0.275f,0.2489f,0.5992f,1.0868f,0.3885f,1.0544f,0.4345f,0.4685f,-0.1706f,0.1277f,0.5794f,-0.1462f,-0.6163f,-0.3489f,-0.6225f,-0.4367f,-0.6803f,0.1168f,-0.1845f,-0.0563f,-0.1362f,-0.4026f,-0.2626f,-0.0361f,0.3291f,0.5579f,0.5284f,0.3723f,0.271f,0.7672f,0.7869f,0.6967f,0.5045f,-0.3916f,-1.5389f,-3.8697f,-4.4227f,-4.5498f,-4.4837f,-4.4273f,-3.7649f,-1.9805f,-2.3951f,-3.7604f,-4.2031f},{-0.4804f,0.7415f,1.0359f,1.189f,1.1764f,0.6932f,-0.5198f,-0.8604f,0.6648f,0.9627f,0.5464f,0.7662f,-0.1421f,0.352f,1.0235f,1.5215f,1.0204f,0.452f,-0.0122f,-0.2764f,0.9209f,0.8855f,0.5272f,0.4791f,0.7001f,0.219f,0.6067f,0.343f,0.7109f,0.3109f,-0.2483f,0.2446f,-0.1754f,-0.2762f,-0.0853f,-0.0531f,0.0522f,-0.0371f,0.2687f,-0.1746f,0.2311f,-0.053f,-0.1838f,0.3835f,0.6884f,0.0257f,0.6833f,0.6668f,1.3991f,0.9532f,0.9223f,0.749f,0.2152f,-1.1953f,-3.6635f,-4.4319f,-4.5688f,-4.539f,-4.5155f,-3.5319f,-1.7062f,-2.0491f,-3.8279f,-4.1309f},{1.0895f,0.9326f,0.9576f,0.9095f,0.8817f,0.6414f,0.9934f,0.9997f,0.448f,0.5616f,-0.1251f,-0.2063f,-0.4206f,0.0521f,-0.5992f,0.5469f,1.014f,0.1933f,-0.0209f,0.456f,1.4387f,0.8519f,0.8765f,0.3841f,1.0955f,0.2291f,0.0159f,0.3583f,0.0717f,-0.207f,-0.2283f,0.1363f,-0.0332f,-0.0956f,-0.1923f,0.3299f,0.2208f,-0.0015f,-0.1735f,-0.263f,0.1432f,0.4316f,0.2821f,0.593f,0.5619f,0.4717f,1.0053f,0.6043f,1.5544f,0.8189f,0.7285f,0.3137f,0.118f,-1.2777f,-3.332f,-4.2334f,-4.5552f,-4.534f,-4.5367f,-3.7499f,-2.0278f,-1.9729f,-3.7746f,-4.0878f},{0.8976f,0.9444f,0.5834f,0.4549f,1.2917f,1.1675f,0.7722f,0.7762f,0.6128f,0.5576f,0.344f,-0.2574f,0.0892f,0.6634f,0.0559f,0.9975f,0.3134f,0.5084f,1.0751f,0.2037f,0.7153f,1.4972f,1.1864f,0.4678f,0.2348f,-0.2456f,-0.4718f,0.3202f,0.5596f,0.4956f,0.2776f,-0.2587f,-0.6797f,0.2102f,-0.0591f,0.2367f,0.3225f,-0.7593f,-0.3359f,0.0528f,0.4683f,0.4911f,0.2567f,0.5434f,0.1567f,0.389f,0.9144f,0.9892f,1.1345f,0.4068f,-0.1194f,0.015f,0.2568f,-1.4206f,-3.3197f,-4.2166f,-4.5537f,-4.5774f,-4.5612f,-3.9693f,-1.9363f,-2.1847f,-3.9888f,-4.1421f},{0.9596f,1.0016f,0.3406f,1.0706f,1.2106f,0.3607f,-1.1903f,-0.1373f,0.7928f,0.7104f,0.1031f,-0.1949f,-0.3517f,0.8326f,0.5302f,1.0417f,1.1742f,0.8274f,1.1573f,0.8517f,-0.0783f,0.3887f,0.0071f,0.3941f,0.6675f,0.7206f,-0.0989f,0.43f,0.315f,-0.0789f,0.1985f,-0.1954f,-0.0343f,-0.0594f,0.2698f,-0.1185f,-0.1719f,-0.2528f,-0.1407f,-0.1942f,0.3267f,0.0697f,0.3055f,0.2276f,0.2059f,0.4486f,0.8791f,1.4214f,1.2199f,0.9137f,0.9895f,0.8025f,0.1871f,-1.3496f,-3.4381f,-4.2951f,-4.5724f,-4.5731f,-4.565f,-4.146f,-1.838f,-1.9903f,-3.9664f,-4.1365f},{0.3506f,0.3781f,-0.2214f,0.2316f,1.1713f,1.2801f,0.9523f,0.6079f,0.9824f,0.484f,0.4678f,0.5619f,0.457f,0.4598f,0.1581f,0.3159f,0.635f,0.5105f,0.6335f,0.6534f,0.5942f,0.2857f,-0.4518f,0.3222f,0.6337f,0.3145f,0.0128f,0.1174f,0.6065f,0.2458f,-0.1753f,-0.0814f,-0.505f,-0.9029f,-0.7516f,-0.1327f,-0.075f,0.0915f,0.4058f,-0.1094f,0.01f,-0.07f,-0.0448f,-0.0707f,0.4455f,0.9761f,0.965f,0.799f,0.674f,0.9839f,0.7176f,0.7248f,-0.4199f,-2.0141f,-4.1286f,-4.4954f,-4.5548f,-4.5589f,-4.5634f,-4.4698f,-2.2389f,-1.9555f,-4.1003f,-4.0955f},{0.7153f,0.4192f,0.1562f,0.3813f,1.1488f,1.063f,0.5946f,0.97f,1.1086f,0.8705f,0.9815f,0.6567f,-0.7898f,-0.5906f,0.3237f,0.8154f,0.3481f,0.9338f,1.2569f,0.5138f,0.2522f,0.1336f,-0.7056f,0.0034f,0.2553f,0.509f,0.9621f,0.3875f,-0.3326f,-0.2649f,-0.2499f,-0.1323f,0.012f,-0.0104f,-0.2482f,0.1135f,0.0895f,0.5463f,0.0016f,0.2939f,0.3877f,-0.4588f,0.4368f,0.659f,0.2987f,0.602f,0.2048f,1.0859f,0.8436f,0.9595f,1.1038f,1.0581f,-0.1227f,-1.5414f,-4.4421f,-4.5794f,-4.5772f,-4.5597f,-4.5542f,-4.3263f,-1.8435f,-1.635f,-3.8819f,-4.2583f},{1.7159f,1.4138f,1.267f,1.6918f,1.7224f,1.2322f,0.5571f,-0.3492f,0.1752f,0.8652f,0.763f,0.5482f,0.4863f,0.8063f,0.7757f,1.2885f,0.9377f,0.8185f,0.6467f,0.525f,-0.2044f,1.0237f,0.8365f,-0.2461f,-0.1352f,-0.3721f,0.1549f,-0.023f,0.0959f,0.0915f,0.2415f,0.0115f,-0.6281f,0.0781f,-0.0941f,-0.5409f,0.0259f,0.322f,-0.3435f,0.4521f,-0.0043f,-0.1615f,-0.1493f,-0.285f,0.2845f,0.4311f,0.2847f,0.9979f,0.7917f,0.6907f,0.9606f,0.6128f,-0.1383f,-1.993f,-4.4745f,-4.57f,-4.5725f,-4.5652f,-4.5431f,-4.3363f,-1.9838f,-2.0344f,-3.9802f,-4.2401f},{1.0462f,1.0087f,1.1703f,1.4533f,1.1143f,-0.1425f,-0.1118f,0.2254f,0.5013f,0.825f,0.8705f,0.8437f,0.0007f,0.0408f,0.1907f,0.5065f,0.8699f,0.5007f,0.5268f,0.5331f,-0.443f,0.7437f,0.8153f,0.1517f,0.8477f,1.0971f,0.9451f,-0.1054f,-0.0622f,-0.4164f,-0.0523f,-0.4281f,-0.2871f,-0.8442f,-1.085f,-0.4624f,-0.1825f,0.2534f,-0.1104f,0.6584f,0.449f,-0.1993f,0.3112f,0.2274f,-0.0367f,0.3947f,0.4387f,0.7728f,0.845f,0.321f,1.1456f,0.6479f,-0.1842f,-1.3098f,-4.1233f,-4.4778f,-4.5559f,-4.5536f,-4.5606f,-4.2922f,-2.1185f,-2.0084f,-3.8865f,-4.1888f},{0.705f,-0.113f,0.8782f,1.3873f,1.5824f,1.011f,-0.174f,-0.3843f,0.4308f,0.8547f,0.898f,1.043f,0.7756f,0.2149f,0.2721f,0.4291f,0.9833f,0.8028f,0.5294f,0.3173f,1.0004f,1.0021f,-0.1231f,0.5327f,0.9741f,0.3105f,0.8859f,0.4624f,-0.5939f,0.1238f,-0.255f,-0.7347f,0.1647f,0.1354f,-0.1511f,0.0874f,0.4799f,0.4811f,-0.1693f,-0.164f,0.4208f,0.1484f,0.4002f,0.0803f,0.061f,0.3824f,0.9121f,0.8246f,1.2117f,0.7499f,0.5709f,1.2135f,-0.0195f,-1.8849f,-3.6259f,-4.4196f,-4.5625f,-4.5712f,-4.5645f,-4.3106f,-2.1206f,-1.9367f,-3.9858f,-4.1363f},{1.8395f,1.54f,0.3981f,1.2912f,1.5967f,1.0393f,0.4164f,0.74f,0.7771f,0.2279f,-0.3603f,0.5244f,0.8443f,0.6329f,-0.4239f,0.1908f,0.1629f,-0.3468f,0.5766f,0.5808f,1.0707f,0.7884f,0.76f,0.321f,0.5278f,-0.0846f,0.2864f,0.266f,0.0424f,0.2765f,-0.3352f,-0.1584f,0.4317f,0.4724f,-0.0941f,0.3204f,0.4162f,0.0254f,-0.1689f,0.9494f,1.1662f,0.4098f,-0.0622f,0.0512f,0.1848f,0.1379f,0.6954f,1.1178f,1.4194f,1.0204f,0.387f,0.3692f,-0.2683f,-1.7601f,-3.5429f,-4.3634f,-4.5661f,-4.5684f,-4.5688f,-4.4202f,-2.1007f,-1.9775f,-3.6714f,-4.0901f},{0.5234f,0.7009f,0.6686f,0.2752f,0.9679f,0.7146f,-0.0534f,0.466f,0.9597f,0.5853f,-0.4075f,-0.86f,-0.5154f,0.6383f,1.131f,1.2315f,0.7741f,0.5702f,0.8062f,1.0745f,0.5128f,0.93f,0.6792f,0.4535f,0.8084f,-0.0136f,0.6557f,0.1328f,-0.0847f,0.0421f,-0.1455f,0.2452f,0.4251f,0.1127f,0.329f,0.0093f,-0.069f,0.3502f,0.3744f,0.2399f,-0.0558f,-0.0582f,0.3238f,0.0421f,0.3216f,-0.0641f,0.926f,1.0987f,0.8032f,0.546f,0.5331f,0.7475f,-0.2792f,-1.3869f,-3.4772f,-4.1737f,-4.5731f,-4.5572f,-4.5564f,-4.4228f,-2.2335f,-2.0422f,-3.5673f,-4.1985f},{0.7626f,0.2873f,0.6454f,1.282f,1.2056f,0.6351f,0.8629f,1.0475f,1.2208f,0.9101f,-0.2654f,-0.5765f,-0.7152f,0.7067f,1.0416f,0.1773f,0.1398f,0.415f,0.3423f,0.4888f,0.502f,0.3226f,0.2492f,0.4346f,1.1952f,0.4533f,0.6912f,0.7746f,0.4297f,0.0558f,-0.4541f,0.2536f,0.0368f,0.3747f,0.4569f,-0.146f,0.1928f,-0.0949f,-0.3651f,0.1419f,0.819f,0.5249f,0.5888f,0.3469f,0.4651f,-0.3839f,-0.2595f,0.5193f,0.623f,0.6913f,0.1936f,-0.0835f,-0.2954f,-1.3786f,-3.35f,-4.1515f,-4.5624f,-4.5367f,-4.5753f,-4.4402f,-2.361f,-1.9514f,-3.5963f,-4.1082f},{1.7501f,1.4542f,1.1118f,1.1475f,1.7288f,1.778f,1.4187f,0.8709f,0.5544f,0.4577f,0.7487f,0.7003f,0.2075f,0.0406f,-0.0613f,0.6425f,0.611f,0.4532f,0.4995f,-0.0561f,-0.2517f,0.2605f,0.7118f,0.8376f,1.1151f,0.3078f,-0.0787f,0.6095f,0.4024f,0.1599f,0.2675f,0.1431f,0.4743f,-0.688f,0.1396f,0.0665f,-0.0762f,-0.5651f,-1.1829f,-0.2053f,0.2966f,0.2211f,0.3679f,0.5756f,0.2081f,0.1921f,0.4065f,0.6552f,0.5553f,1.0634f,0.839f,0.1666f,0.0832f,-1.3711f,-3.3813f,-4.1692f,-4.5613f,-4.559f,-4.5555f,-4.3249f,-2.2192f,-2.1884f,-3.6697f,-4.2548f},{1.499f,1.2655f,1.0756f,0.2115f,1.1318f,0.8093f,0.1195f,-0.6964f,0.6106f,1.1955f,0.9765f,0.2497f,-0.2341f,0.8345f,0.54f,0.3508f,0.5151f,0.2833f,1.2152f,1.3026f,0.6799f,0.5696f,0.7363f,0.666f,0.6782f,0.687f,0.395f,0.5133f,0.678f,-0.2334f,0.1808f,0.4087f,0.2044f,-0.0228f,-0.49f,0.4713f,-0.2712f,0.144f,0.0701f,0.3116f,0.4796f,0.3404f,0.3686f,0.0621f,-0.0576f,-0.3753f,0.5892f,1.4886f,1.355f,0.7464f,0.8057f,0.9641f,0.3424f,-1.0546f,-3.3418f,-4.2401f,-4.5631f,-4.5531f,-4.5742f,-4.321f,-1.8929f,-1.7685f,-3.7759f,-4.125f},{0.8022f,0.5844f,0.6249f,0.2839f,1.3519f,1.3207f,1.1579f,0.7313f,-0.1443f,0.2064f,0.0011f,-0.4255f,-0.0565f,1.0684f,0.8163f,0.179f,0.159f,0.9528f,1.3955f,0.4774f,0.8674f,1.0158f,0.7245f,0.8391f,0.1993f,0.4275f,0.3312f,-0.4172f,0.2319f,-0.0687f,0.0258f,0.3489f,0.2495f,-0.1613f,-0.0742f,0.0291f,-0.8968f,-0.6112f,-0.3734f,-0.054f,-0.2334f,-0.554f,-0.1336f,-0.1666f,-0.3316f,-0.2701f,-0.0522f,1.0671f,1.2522f,0.5786f,0.7835f,0.7194f,0.1587f,-1.7637f,-3.2087f,-3.882f,-4.5304f,-4.5684f,-4.4623f,-4.1557f,-2.2089f,-2.0999f,-3.947f,-4.0536f},{1.712f,1.2321f,0.8316f,1.181f,1.35f,0.5939f,0.699f,0.4068f,-0.0098f,0.2136f,0.2132f,0.3916f,0.2759f,0.039f,0.66f,1.1333f,0.8299f,1.0827f,1.5844f,0.5567f,0.2265f,0.3198f,0.7524f,0.276f,0.835f,1.051f,0.0351f,-0.1742f,-0.1336f,-0.064f,-0.1204f,-0.1409f,-0.0919f,0.2361f,0.2572f,0.2109f,0.231f,0.0797f,0.0425f,0.3512f,-0.2251f,0.3789f,0.1937f,0.4721f,-0.1572f,0.2204f,0.7449f,0.9321f,1.7224f,0.0684f,0.4578f,0.228f,-0.4207f,-1.8083f,-3.7237f,-3.6937f,-4.5083f,-4.5621f,-4.2749f,-3.8004f,-2.4568f,-2.3308f,-3.7438f,-4.035f},{1.1696f,-0.6323f,0.0869f,1.2502f,1.6185f,1.4509f,0.9252f,0.8176f,1.0445f,0.9969f,0.6146f,0.2712f,0.2525f,0.6332f,0.113f,0.9577f,1.5316f,1.146f,0.7815f,0.9765f,1.026f,0.6041f,0.8464f,1.2821f,1.12f,0.1393f,0.443f,0.3364f,0.3037f,0.2257f,0.5687f,0.4586f,0.0018f,-0.0624f,0.077f,0.025f,0.1672f,0.6081f,0.1836f,-0.1227f,-0.3806f,0.4481f,0.3628f,0.2556f,-0.3319f,0.6117f,0.0631f,0.9922f,1.2797f,0.7031f,0.6155f,0.7515f,-0.515f,-2.126f,-4.0321f,-3.9911f,-4.5046f,-4.5671f,-4.3171f,-3.7704f,-2.163f,-1.5628f,-3.7648f,-4.0165f},{1.7103f,0.6402f,0.925f,1.3925f,1.6776f,1.1475f,0.074f,0.8418f,1.1936f,0.4076f,0.5547f,0.3244f,-0.9202f,0.3133f,0.2195f,0.6367f,0.9071f,-0.1443f,0.5259f,0.3956f,0.7306f,0.5885f,0.6877f,0.6455f,0.4226f,0.7846f,0.2029f,-0.2372f,0.3309f,0.5938f,0.7293f,0.9136f,0.8191f,0.3021f,0.2969f,0.1948f,0.1807f,-0.0059f,0.3397f,0.3682f,0.2367f,-0.1576f,0.2032f,0.5116f,0.0064f,0.2699f,0.6332f,0.8724f,1.0376f,0.4527f,1.3058f,1.0274f,-0.3886f,-1.5923f,-3.995f,-3.692f,-4.5208f,-4.5749f,-4.2492f,-3.871f,-2.1382f,-1.7306f,-3.8598f,-3.824f},{2.1454f,1.705f,0.8742f,1.139f,1.7639f,1.3373f,0.1916f,0.2186f,0.6588f,0.5796f,0.4607f,0.6864f,-0.1503f,-0.1786f,-0.0116f,0.8631f,0.8917f,0.3815f,0.9365f,1.1275f,0.5934f,0.0638f,0.3817f,0.6875f,0.9202f,0.4618f,0.5207f,0.1206f,0.1969f,0.3467f,0.3583f,0.4074f,0.5048f,-0.7599f,-0.8049f,0.2247f,-0.0252f,-0.4106f,0.2848f,0.7304f,-0.3495f,0.0952f,0.1403f,-0.2066f,0.0855f,0.871f,0.9116f,1.0596f,0.7728f,0.5152f,0.8563f,0.8915f,-0.4549f,-1.8686f,-4.4445f,-4.4241f,-4.5404f,-4.5383f,-4.5046f,-4.2726f,-2.3219f,-1.8023f,-3.7586f,-4.0861f},{0.9804f,0.4904f,0.8966f,1.0558f,1.2799f,0.6497f,0.4415f,0.5645f,0.3265f,0.2816f,0.5981f,0.4723f,0.4298f,0.8878f,0.1555f,-0.1894f,0.2681f,0.5221f,-0.4076f,0.4109f,0.5374f,1.2065f,1.3571f,0.9051f,0.1223f,-0.041f,0.1463f,0.4748f,0.4765f,0.5065f,-0.0177f,-0.0454f,0.0914f,0.1666f,-0.5742f,-0.0433f,0.354f,-0.0531f,-0.4422f,-0.2234f,0.0112f,0.5627f,0.4821f,0.2082f,0.5087f,0.8792f,0.8325f,1.0011f,0.7481f,0.6141f,0.747f,0.9496f,-0.317f,-1.9012f,-4.4299f,-4.5527f,-4.5288f,-4.2642f,-4.1823f,-4.3208f,-2.0908f,-1.6628f,-3.6611f,-3.9525f},{1.7252f,1.3844f,0.7861f,0.7001f,1.2924f,1.0995f,0.2412f,-0.3602f,-0.3485f,-0.223f,-0.4221f,0.4856f,0.6759f,0.5914f,0.7802f,1.1961f,0.7903f,0.2298f,0.0883f,-0.4463f,0.7622f,0.832f,0.4236f,1.2348f,0.8514f,0.1684f,-0.2354f,0.2578f,0.737f,-0.0397f,-0.0205f,0.0372f,-0.214f,-0.7015f,0.1854f,0.0054f,-0.1051f,-0.5669f,-0.446f,-0.2013f,0.1176f,0.1506f,-0.2854f,-0.3447f,0.2156f,0.9275f,0.7211f,0.9149f,0.7342f,0.5928f,0.5218f,0.4306f,-0.0228f,-1.5691f,-4.3822f,-4.5498f,-4.5432f,-4.1233f,-3.8463f,-4.0149f,-1.7948f,-1.8724f,-3.8274f,-4.0196f},{2.015f,1.7221f,1.1399f,0.9458f,1.1878f,0.8412f,0.8105f,0.5562f,-0.3529f,-0.6947f,-0.8519f,0.0567f,0.4214f,0.4436f,0.6728f,1.3519f,1.1108f,0.3041f,0.1671f,0.2254f,-0.2609f,-0.8577f,0.7244f,1.3717f,0.8229f,0.2629f,0.1159f,0.0733f,-0.0557f,-0.1638f,0.1628f,0.0215f,0.145f,-0.5138f,0.0498f,-0.0711f,-0.0214f,-0.5824f,0.1818f,0.0293f,-0.41f,0.245f,0.6212f,-0.1624f,0.0727f,0.7056f,0.7702f,0.9968f,1.3472f,0.956f,1.4989f,1.3306f,-0.1575f,-1.6624f,-4.3898f,-4.5655f,-4.5379f,-4.0336f,-3.8735f,-3.846f,-2.015f,-2.0265f,-3.9386f,-4.1229f},{1.0659f,0.563f,-0.3126f,1.233f,1.5284f,1.0738f,0.2857f,0.3881f,0.4149f,-0.0452f,-0.4999f,-0.6061f,0.3624f,1.0504f,0.5179f,0.5953f,1.0107f,0.9236f,0.4918f,0.7577f,0.1148f,0.7514f,1.3059f,0.7752f,0.7292f,-0.106f,-0.1278f,-0.3933f,-0.2064f,0.1971f,-0.4512f,-0.1746f,0.3586f,0.6741f,0.4028f,-0.0208f,0.0532f,-0.358f,-0.3569f,0.59f,-0.0486f,-0.1629f,0.2948f,0.2312f,0.4715f,0.3839f,0.8015f,0.6509f,1.2495f,1.0259f,0.9395f,0.7838f,-0.021f,-1.3919f,-4.3531f,-4.5627f,-4.5598f,-4.089f,-3.7834f,-3.6823f,-1.7913f,-2.063f,-3.9325f,-4.0285f},{1.8641f,0.2978f,0.4832f,0.4012f,1.1276f,0.8215f,0.5299f,0.2157f,0.4983f,0.8986f,0.9315f,0.8891f,0.161f,0.4273f,0.5999f,0.3921f,0.588f,0.6661f,0.9297f,0.9356f,1.2298f,0.5364f,0.9872f,0.9848f,0.7476f,-0.0195f,0.4948f,0.3154f,0.2603f,0.331f,0.2447f,0.3099f,-0.0327f,-0.2039f,-0.0427f,-0.0298f,0.3429f,0.3077f,0.2572f,0.2629f,0.0941f,0.4821f,0.2618f,0.1333f,0.223f,0.089f,0.3877f,0.2974f,0.8983f,0.2972f,0.7672f,1.1615f,0.069f,-1.3939f,-4.3363f,-4.5622f,-4.5622f,-4.1431f,-3.7899f,-3.6254f,-1.6001f,-1.6841f,-3.8176f,-4.0009f},{1.9632f,1.1914f,0.6967f,1.555f,1.7758f,1.4896f,0.9178f,0.7963f,0.9871f,0.6179f,0.0993f,0.0133f,0.6943f,1.1319f,1.0014f,0.8203f,-0.1178f,-0.4851f,0.3597f,0.0511f,-0.0391f,0.7216f,0.2581f,0.8388f,0.8585f,0.2457f,-0.1779f,0.5847f,0.802f,0.3929f,-0.1879f,0.3866f,0.798f,0.1498f,-0.1688f,0.2611f,0.0008f,-0.1012f,0.2452f,0.7763f,0.1894f,0.3094f,-0.0104f,0.0517f,0.4529f,0.0257f,0.2903f,1.2009f,1.2533f,0.1336f,1.3467f,1.3194f,-0.7026f,-1.8772f,-4.3631f,-4.5568f,-4.5561f,-4.0629f,-4.0976f,-3.5025f,-1.6751f,-1.5024f,-3.733f,-4.0388f},{1.2161f,-0.5359f,0.4582f,1.2652f,1.8375f,1.6763f,0.7977f,-0.1646f,0.6979f,0.9574f,0.4334f,0.1837f,0.1835f,1.2015f,1.3035f,1.5401f,0.2509f,0.3192f,0.5964f,0.9467f,0.8749f,0.6175f,0.6548f,0.5174f,0.2086f,0.7839f,0.2801f,0.7635f,0.7484f,0.5719f,-0.3321f,-0.0672f,-0.2109f,-0.6362f,-0.2432f,0.2772f,0.1474f,0.2039f,0.0319f,0.64f,0.2383f,-0.1417f,-0.0858f,-0.3174f,0.2314f,0.7494f,0.4717f,1.0278f,1.0836f,0.6864f,1.4599f,0.7825f,-0.6765f,-1.6303f,-4.3736f,-4.5597f,-4.5208f,-4.0512f,-4.3928f,-3.5445f,-1.6406f,-1.6086f,-3.7111f,-4.0366f},{1.4625f,1.3026f,1.2498f,1.5111f,1.5325f,0.7475f,-0.3316f,0.1335f,0.621f,1.0671f,0.9327f,0.8976f,1.1579f,0.7522f,-0.1109f,0.867f,1.3784f,0.6871f,0.8599f,1.0747f,0.3445f,0.5199f,0.1812f,-0.4979f,0.1195f,0.393f,0.5275f,0.8941f,0.2931f,-0.0925f,-0.1373f,0.1785f,0.1712f,-0.0972f,-0.3637f,-0.5891f,0.269f,-0.1803f,-0.1369f,0.8318f,0.642f,-0.2007f,0.0582f,-0.854f,0.7783f,0.6996f,0.7125f,0.8929f,1.2008f,1.0935f,0.7413f,0.5659f,-0.4136f,-1.9995f,-4.4448f,-4.5657f,-4.5339f,-4.013f,-4.1434f,-3.6333f,-1.7809f,-1.7277f,-3.6749f,-4.0221f},{0.9946f,0.8063f,0.9356f,1.2824f,1.5947f,1.2452f,0.47f,0.281f,0.1626f,0.4808f,0.6238f,0.4307f,-0.308f,-0.1975f,0.4906f,0.6153f,1.1317f,0.9796f,1.2297f,1.1903f,1.2983f,0.7984f,0.993f,1.2325f,0.8863f,0.3715f,0.1898f,0.396f,0.083f,-0.3511f,-0.3133f,-0.8104f,-0.7387f,-0.2287f,-0.7714f,-0.638f,-0.0099f,0.5508f,0.6626f,0.4323f,0.3194f,0.0975f,0.1131f,-0.0441f,0.4273f,0.3926f,0.6304f,1.2795f,1.2882f,1.3248f,0.7598f,0.8265f,-0.2264f,-2.1044f,-4.4884f,-4.541f,-4.5266f,-4.1026f,-4.0767f,-3.8916f,-1.6311f,-1.9777f,-3.7903f,-4.0363f},{1.2292f,0.5568f,0.3402f,0.9359f,1.4413f,1.2149f,0.5107f,0.6185f,0.8985f,0.3661f,-0.7562f,-0.2386f,0.3171f,0.2867f,1.0449f,0.8684f,0.9074f,1.1763f,0.4036f,0.3033f,0.4776f,0.3561f,0.8401f,0.6035f,-0.2931f,0.5076f,0.9401f,0.401f,0.3845f,-0.0114f,-0.5196f,-0.4362f,-0.0499f,-0.0621f,-0.3128f,-0.466f,-0.0593f,0.5413f,0.1002f,0.193f,-0.2579f,0.0386f,0.0036f,0.2963f,-0.0748f,0.4118f,0.5699f,1.0917f,1.0376f,0.5022f,0.3039f,0.6535f,-0.5426f,-2.1401f,-3.9204f,-4.2181f,-4.5468f,-4.234f,-4.2589f,-4.0917f,-2.2164f,-1.9178f,-3.7989f,-4.1149f},{1.7847f,1.2313f,0.68f,0.6402f,1.2656f,1.0752f,0.2539f,0.4536f,0.408f,0.6899f,0.7886f,1.0515f,0.8259f,0.4754f,0.5496f,0.5145f,0.3164f,0.5719f,1.1026f,0.6314f,0.6148f,0.7739f,0.9376f,0.418f,0.2288f,0.7394f,0.1562f,0.0375f,0.5546f,0.0035f,-0.3408f,0.6118f,0.1159f,-0.2101f,-0.4175f,-0.8451f,-0.2067f,-0.2035f,-0.6629f,-0.6909f,-0.2538f,0.5119f,0.0838f,-0.2439f,-0.0571f,0.5783f,0.8021f,1.2053f,1.1936f,0.5936f,0.6037f,0.4913f,-0.4297f,-1.7838f,-3.5348f,-3.9581f,-4.5419f,-4.2896f,-4.2371f,-4.0903f,-1.9981f,-2.2036f,-3.7646f,-4.1647f},{1.33f,1.5184f,1.0423f,0.8114f,1.2609f,0.8235f,0.5661f,1.0613f,0.9041f,0.2692f,-0.3721f,-1.0785f,-0.713f,-0.2759f,0.5869f,1.0026f,1.0144f,1.0424f,0.2515f,0.1339f,1.1401f,1.648f,1.0983f,1.2887f,0.8187f,0.5779f,0.1723f,0.485f,-0.0614f,-0.2208f,-0.6108f,0.4491f,0.8478f,-0.5856f,-0.5833f,-0.6797f,-0.205f,-0.0632f,-0.1067f,0.2377f,0.0603f,-0.3828f,-0.3899f,-0.7539f,-0.3822f,-0.0705f,0.6389f,0.6094f,0.9793f,0.5132f,0.6296f,0.2951f,0.0614f,-1.4631f,-3.6438f,-4.1169f,-4.5492f,-4.2085f,-4.2729f,-4.1536f,-2.7438f,-2.3402f,-3.7813f,-4.1335f},{1.3627f,1.1295f,1.372f,1.4263f,1.0731f,0.5811f,0.4124f,-0.067f,-0.6266f,0.0661f,-0.2603f,0.1376f,0.7974f,0.7369f,-0.7057f,0.4378f,1.2527f,0.8655f,0.8571f,0.6312f,0.1324f,0.4779f,0.7549f,1.2825f,0.605f,-0.2814f,0.5901f,-0.0203f,0.0084f,-0.8123f,-1.2809f,0.1931f,0.7163f,0.1207f,0.1434f,0.6427f,0.1399f,0.3416f,-0.2763f,-0.52f,0.1262f,-0.1296f,-0.2188f,-0.4726f,0.1567f,0.7412f,0.6161f,0.7846f,1.2953f,1.025f,0.7878f,0.6565f,-0.219f,-1.85f,-3.5334f,-4.4526f,-4.5489f,-4.2842f,-4.3754f,-4.3439f,-2.4675f,-1.994f,-3.5762f,-4.2267f},{1.8605f,1.4916f,0.966f,0.3553f,0.6103f,0.4382f,-0.5827f,-0.5393f,0.1595f,-0.0354f,0.1563f,0.4855f,1.2431f,1.5831f,1.1235f,0.7467f,0.2843f,0.4822f,0.8038f,0.8809f,0.2769f,0.5087f,0.0961f,0.451f,0.1487f,0.484f,0.0585f,-0.2649f,0.2328f,0.2401f,-0.3702f,-0.0384f,0.5127f,0.3567f,-0.4094f,-0.1433f,0.2537f,0.6484f,0.3527f,0.0969f,0.1993f,-0.113f,0.2037f,-0.1229f,-0.4722f,0.618f,0.7789f,1.0721f,1.3342f,1.4108f,1.0457f,0.8258f,-0.2042f,-2.1546f,-3.585f,-4.5399f,-4.5637f,-4.5369f,-4.5549f,-4.4512f,-2.5271f,-1.731f,-3.4449f,-4.1951f},{0.6904f,0.7094f,0.9899f,0.4341f,0.3293f,0.2409f,0.3361f,-0.0999f,0.187f,0.6259f,0.8062f,0.739f,0.6584f,0.8995f,0.7472f,1.2063f,1.1072f,0.9473f,0.7697f,0.8778f,0.987f,1.2407f,1.0028f,0.5099f,0.27f,0.5601f,-0.1084f,-0.2486f,0.5469f,0.5993f,0.1589f,0.032f,-0.3268f,-0.028f,-0.0142f,-0.0463f,-0.1272f,0.2109f,0.6232f,0.3562f,0.2639f,0.1813f,-0.2585f,-0.2746f,0.3238f,0.2483f,1.1305f,1.2112f,0.8037f,1.3351f,1.1763f,0.8503f,-0.0846f,-1.9101f,-3.692f,-4.5643f,-4.564f,-4.5674f,-4.5675f,-4.4513f,-3.1287f,-1.917f,-3.4922f,-4.1163f},{0.448f,0.4471f,0.6153f,0.2421f,0.7798f,1.0224f,0.7435f,0.3752f,0.1974f,0.155f,-0.1352f,0.41f,0.3374f,0.5075f,0.1246f,0.1811f,0.8004f,0.3678f,-0.3577f,-0.586f,0.3739f,0.9099f,0.7791f,1.291f,0.9587f,-0.1748f,0.0932f,0.4405f,0.5565f,-0.7605f,0.2912f,0.0674f,-0.0876f,-0.2965f,-0.6505f,0.1817f,0.1469f,-0.3302f,-0.2249f,0.2277f,0.4836f,0.0108f,-0.0139f,-0.2126f,0.2636f,0.2981f,0.2099f,0.4591f,0.8108f,1.0191f,1.0907f,0.5293f,-0.071f,-2.0342f,-4.2271f,-4.5489f,-4.5593f,-4.5591f,-4.5376f,-4.4877f,-3.0442f,-1.5692f,-3.2133f,-4.0094f},{1.7685f,1.3648f,1.1299f,1.1786f,0.6562f,0.3837f,0.8985f,0.6723f,0.9452f,0.564f,-0.424f,-0.2824f,-0.513f,0.918f,1.1747f,0.9134f,0.6849f,0.1401f,-0.0141f,-0.3305f,-0.2996f,0.6551f,0.9543f,0.8753f,-0.0275f,0.6804f,0.6585f,0.5116f,0.419f,-0.4408f,-0.248f,0.053f,-0.7642f,-1.106f,-0.2052f,0.0107f,0.2284f,0.0681f,0.276f,0.0249f,-0.1015f,-0.1781f,-0.3491f,-0.3762f,0.2979f,0.7923f,0.5295f,0.8418f,0.5501f,1.1378f,1.689f,0.8598f,-0.0879f,-2.3254f,-4.1963f,-4.5719f,-4.5598f,-4.5408f,-4.5597f,-4.457f,-2.229f,-1.4378f,-3.0781f,-3.9996f},{0.5066f,1.6344f,1.4724f,0.532f,1.3813f,1.4052f,0.9275f,-0.2283f,-0.1692f,0.4584f,0.7158f,0.5457f,-0.1522f,0.3625f,0.8247f,1.08f,0.8124f,0.6431f,0.7953f,0.8828f,0.3655f,0.4513f,0.8534f,0.929f,0.8002f,0.9968f,0.3191f,0.0815f,0.3059f,-0.1384f,0.0378f,-0.0531f,0.2486f,-0.4519f,-0.0047f,-0.0238f,0.227f,-0.0345f,-0.3781f,-0.0775f,-0.5423f,-0.0091f,0.7774f,0.4502f,0.8051f,0.2016f,0.2853f,0.6644f,0.5591f,0.6903f,1.4088f,0.4511f,-1.065f,-2.7134f,-3.9173f,-4.578f,-4.5607f,-4.5531f,-4.5688f,-4.4721f,-2.4905f,-1.4569f,-2.9665f,-4.0852f},{1.0693f,0.84f,1.0597f,0.5669f,1.0174f,0.3119f,0.518f,0.6111f,1.0137f,1.1279f,1.0625f,1.1225f,0.1633f,0.7522f,1.191f,1.2378f,1.1067f,0.782f,1.3178f,1.0113f,0.8173f,0.5582f,0.585f,0.4409f,0.957f,0.2798f,0.2731f,0.4755f,0.3011f,0.6636f,0.5867f,0.4251f,0.5085f,-0.2135f,-0.2005f,0.7143f,1.1217f,0.0639f,-0.1696f,-0.0242f,0.5842f,0.7117f,0.4316f,0.4531f,-0.0322f,-0.107f,0.4344f,0.9257f,0.9624f,0.641f,1.352f,0.4868f,-0.4309f,-2.3114f,-3.8999f,-4.5583f,-4.5599f,-4.5445f,-4.513f,-4.3735f,-2.3815f,-1.4337f,-2.9948f,-4.0311f},{1.7839f,1.1755f,-0.4381f,1.207f,1.6506f,1.4913f,0.8278f,0.2712f,0.5572f,-0.2654f,-0.7503f,0.3445f,0.6171f,-0.2234f,0.1654f,0.98f,1.002f,0.705f,0.9553f,0.613f,0.9173f,0.1026f,0.2519f,-0.3277f,-0.0186f,0.2136f,-0.1162f,-1.1439f,0.0308f,0.5205f,0.0677f,0.0649f,-0.2047f,0.23f,0.0308f,0.3176f,0.7466f,0.1078f,0.5589f,0.3241f,0.1597f,-0.1239f,-0.4067f,-0.3645f,-0.1177f,0.5348f,0.6528f,1.0501f,1.025f,0.4142f,0.7261f,0.8213f,-0.5971f,-2.7283f,-4.0715f,-4.5627f,-4.5648f,-4.5718f,-4.3287f,-4.1141f,-2.298f,-1.9142f,-3.249f,-4.0871f},{1.1912f,0.3471f,0.8999f,0.5862f,1.4311f,0.748f,-0.1452f,0.7401f,0.8157f,-0.1433f,0.3594f,1.0905f,1.1637f,1.0866f,0.9856f,0.532f,0.4473f,0.1895f,-0.169f,-0.5634f,0.9599f,1.5337f,1.3094f,0.3887f,-0.0553f,0.1156f,0.1589f,-0.4009f,-0.0369f,-0.2889f,-0.0745f,-0.0489f,0.1005f,0.2821f,0.2174f,0.4838f,-0.1739f,-0.2613f,0.3314f,-0.2715f,-0.0859f,0.0208f,-0.0589f,0.4599f,0.7293f,0.682f,0.9737f,0.9564f,1.2426f,1.0543f,0.8963f,0.2755f,-0.366f,-2.0946f,-4.4456f,-4.5614f,-4.5721f,-4.5706f,-4.2799f,-3.9384f,-2.2284f,-2.1331f,-3.4052f,-4.0488f},{0.7969f,1.7448f,1.6801f,1.5092f,1.9262f,1.8402f,1.4425f,0.6852f,0.7084f,0.3118f,-0.2775f,0.1821f,-0.2257f,0.374f,0.7092f,0.2284f,0.6344f,0.7473f,0.4993f,-0.364f,0.5318f,0.981f,1.4593f,0.9502f,0.0884f,0.2961f,-0.0057f,0.1854f,0.567f,-0.0159f,-0.7049f,-0.7113f,0.1569f,0.5723f,0.4568f,0.1679f,-0.0924f,-0.1438f,0.2945f,-0.2789f,0.1746f,0.2648f,-0.1209f,-0.0596f,0.7668f,0.6409f,0.1763f,0.8977f,0.8571f,0.8337f,1.3167f,0.9622f,-0.0824f,-2.1557f,-4.1613f,-4.567f,-4.5603f,-4.5808f,-4.3395f,-4.1556f,-2.3228f,-2.5382f,-3.6657f,-3.9956f},{1.8831f,1.3948f,0.6658f,1.5718f,1.6486f,1.4029f,1.1942f,0.7455f,0.9687f,0.7723f,0.226f,0.6696f,0.3485f,0.7745f,1.1824f,1.1274f,0.8688f,0.0776f,0.412f,1.1222f,1.0613f,1.118f,1.061f,1.0562f,0.5812f,-0.2416f,0.4196f,0.9178f,0.4299f,0.1923f,0.4526f,0.8983f,0.3457f,-0.8132f,-0.5799f,0.3983f,-0.0147f,-0.12f,0.6153f,0.6215f,0.4842f,0.4121f,0.0673f,-0.1825f,0.4836f,0.3849f,0.9025f,1.1545f,0.6262f,0.6243f,0.9011f,0.5262f,0.0055f,-1.7621f,-4.0493f,-4.557f,-4.5373f,-4.5559f,-4.513f,-4.3194f,-2.4814f,-2.0537f,-3.7786f,-3.9311f},{1.4068f,0.5363f,0.8367f,0.5825f,1.0567f,0.8558f,0.0957f,0.4581f,0.4792f,-0.7425f,-0.8015f,-0.0411f,0.1691f,0.2416f,0.6892f,0.709f,0.8274f,0.5743f,1.0678f,0.1342f,0.5729f,1.0564f,1.5341f,1.2194f,-0.1725f,0.2092f,0.4624f,0.6944f,0.2923f,-0.2758f,-0.1125f,0.0561f,-0.683f,-0.6288f,0.1558f,-0.3163f,0.3301f,-0.0094f,0.4222f,0.1912f,-0.1035f,-0.17f,0.0822f,-0.0616f,0.5961f,0.6997f,0.7277f,0.997f,0.6602f,0.9298f,1.347f,0.8912f,-0.0966f,-1.7289f,-4.0789f,-4.5667f,-4.5571f,-4.5643f,-4.5564f,-4.3479f,-2.5105f,-1.5933f,-3.4107f,-3.9306f},{0.7116f,1.2719f,1.164f,1.2392f,1.5367f,1.5277f,0.9302f,-0.1725f,-0.3115f,-0.5723f,0.1104f,0.5556f,0.3942f,0.5618f,0.6317f,0.4353f,0.9688f,1.1446f,1.2524f,1.2055f,1.5369f,0.4452f,0.6538f,0.8144f,0.6747f,0.3139f,0.6943f,-0.2498f,0.3685f,0.2104f,-0.1362f,0.1323f,-0.0876f,-0.3083f,-0.4714f,-0.3941f,-0.3259f,0.2572f,0.9453f,0.5036f,-0.7374f,-0.0904f,-0.2845f,-0.1308f,0.8602f,1.1201f,0.8962f,0.8939f,0.555f,0.9502f,1.0985f,0.8828f,0.0701f,-2.356f,-4.1949f,-4.5552f,-4.5663f,-4.5678f,-4.5536f,-4.2247f,-1.9513f,-1.2864f,-3.4743f,-4.007f},{1.5018f,0.9118f,-0.4588f,0.2257f,0.2231f,0.1756f,0.8291f,1.0213f,0.9902f,0.8777f,0.1743f,0.3077f,0.4452f,0.5936f,0.8355f,0.7362f,0.1254f,0.0753f,0.5191f,0.926f,0.8431f,0.64f,0.3829f,0.5438f,0.9181f,0.5767f,0.0715f,0.3331f,0.0065f,0.1613f,-0.1839f,0.292f,-0.2337f,-0.7025f,0.2695f,-0.0551f,0.0817f,0.7604f,0.9577f,0.5241f,0.0297f,0.4f,0.1328f,0.4766f,0.3641f,0.7116f,1.3112f,1.1918f,1.1499f,0.828f,1.0151f,0.9584f,-0.5322f,-1.7118f,-4.3994f,-4.5514f,-4.5644f,-4.5502f,-4.5614f,-4.29f,-1.8334f,-1.4859f,-3.5837f,-4.1622f},{0.9971f,-0.4568f,0.4285f,0.6949f,0.5148f,0.3379f,0.6166f,0.4809f,0.712f,1.3513f,1.0323f,0.6134f,0.2747f,-0.0299f,0.5514f,1.1597f,0.6344f,0.9932f,0.9095f,0.7825f,1.2868f,0.6881f,0.1044f,-0.0257f,0.5265f,-0.3175f,-0.1435f,0.0452f,0.1074f,-0.6992f,-0.0207f,0.1239f,0.0564f,-0.165f,-0.3169f,-0.2836f,-0.6261f,-0.555f,0.6732f,0.8119f,0.2248f,0.6849f,0.1528f,0.1515f,0.4226f,0.8153f,0.7623f,1.1072f,0.7423f,0.3579f,1.0779f,0.6785f,0.1224f,-1.6501f,-4.4078f,-4.558f,-4.5715f,-4.5715f,-4.5737f,-4.3819f,-2.2807f,-2.1803f,-3.6234f,-4.0069f},{0.7437f,1.3894f,1.2884f,1.1354f,1.1174f,0.8254f,0.5832f,0.3022f,0.9208f,0.6265f,0.0014f,0.4152f,0.1179f,0.746f,1.0894f,0.6883f,0.7647f,1.1159f,1.048f,0.3892f,0.0145f,0.2006f,0.464f,0.6737f,1.274f,0.573f,-0.0826f,0.5659f,0.237f,0.1708f,-0.5314f,-0.0389f,0.0359f,-0.6733f,-0.5279f,-0.2672f,0.426f,-0.4412f,-0.421f,-0.217f,-0.1497f,0.6893f,0.4112f,-0.4117f,0.3002f,0.5442f,0.3043f,0.3276f,0.8662f,0.7505f,1.1904f,1.0976f,-0.2366f,-1.5651f,-4.4078f,-4.567f,-4.5551f,-4.567f,-4.5564f,-4.4392f,-2.4393f,-1.7867f,-3.4977f,-4.0565f},{1.5821f,1.3603f,-0.1508f,0.71f,0.8133f,1.1159f,1.4283f,1.0453f,0.1359f,0.0959f,-0.0016f,0.9181f,0.2625f,0.9441f,1.1029f,0.6578f,0.346f,1.0842f,1.1995f,0.5247f,0.2821f,1.1364f,1.1257f,1.064f,0.3758f,0.3528f,0.2595f,0.4937f,-0.1555f,-0.1366f,0.0303f,-0.3135f,0.0408f,0.4907f,0.0102f,0.1226f,0.5892f,0.5636f,-0.3011f,-0.4942f,-0.096f,-0.245f,0.5225f,-0.2184f,0.1781f,0.8745f,0.8179f,1.2852f,0.7573f,0.8489f,1.2019f,1.1493f,0.1684f,-1.4725f,-4.4268f,-4.5706f,-4.5675f,-4.5553f,-4.5485f,-4.4501f,-2.5821f,-1.7763f,-3.5196f,-4.0862f},{0.2787f,-0.0807f,0.4629f,1.0686f,0.9731f,1.2748f,1.3674f,0.7738f,-0.2501f,-0.2461f,0.4174f,0.4635f,-0.0673f,0.8428f,0.3318f,0.4169f,0.2996f,1.4213f,1.6727f,1.1647f,0.6258f,0.8066f,0.6967f,0.7782f,0.3342f,-0.3036f,0.3626f,0.6668f,0.3598f,-0.473f,-0.4501f,0.0854f,-0.232f,-0.4227f,0.0894f,0.1172f,0.8384f,-0.1467f,-0.5188f,0.3192f,0.6197f,-0.0654f,0.445f,-0.2134f,0.6378f,0.7907f,0.2866f,1.1114f,0.7286f,0.7702f,0.6553f,1.1205f,0.0354f,-1.4089f,-4.3347f,-4.5508f,-4.5568f,-4.5496f,-4.5652f,-4.4325f,-2.4908f,-1.6876f,-3.3702f,-4.0322f},{1.4743f,1.3033f,1.067f,1.7164f,1.9538f,1.5263f,0.5051f,0.4494f,-0.0089f,-0.5006f,-0.9579f,-0.8278f,0.2879f,-0.1181f,-0.0691f,0.3136f,0.2996f,0.666f,1.3514f,0.283f,0.6393f,1.2958f,0.8245f,0.9692f,0.5792f,-0.1137f,0.1119f,0.2236f,0.3591f,0.4886f,0.4121f,0.012f,-0.7595f,0.357f,-0.6895f,-0.6838f,-0.1291f,-0.2379f,0.1452f,0.1047f,0.385f,-0.0366f,0.0158f,-0.1436f,0.2908f,0.4415f,0.4286f,0.7635f,1.1071f,1.0167f,1.4687f,0.5933f,-0.4591f,-1.5689f,-3.9712f,-4.5286f,-4.5551f,-4.5181f,-4.4284f,-4.1767f,-2.6051f,-1.639f,-3.2386f,-3.862f},{1.0797f,0.507f,1.1519f,0.1802f,1.5663f,1.0138f,-0.422f,0.255f,0.4463f,0.1985f,0.7788f,0.8742f,0.6123f,0.1837f,-0.3304f,0.2914f,-0.3349f,0.2457f,0.8291f,0.8821f,-0.31f,-0.4283f,0.9795f,0.8067f,0.9263f,0.2452f,0.5812f,0.2407f,0.0418f,0.0659f,-0.4343f,-0.0466f,-0.3407f,-0.0278f,0.1602f,-0.042f,0.3078f,-0.0545f,-0.1935f,0.3689f,0.3593f,-0.3642f,-0.7358f,0.413f,0.4356f,1.0032f,0.3406f,0.5625f,0.7885f,1.2043f,1.1145f,0.1211f,-0.2078f,-1.5018f,-3.2023f,-4.4719f,-4.563f,-4.2967f,-4.2756f,-4.1302f,-2.7139f,-1.9273f,-3.321f,-4.0274f},{1.3682f,1.1562f,0.0637f,1.4047f,1.7088f,1.5189f,1.1732f,1.0264f,1.1973f,1.1851f,1.0734f,0.6106f,-0.2291f,0.8277f,0.6574f,0.4214f,1.0489f,1.3672f,1.0831f,0.4613f,0.0069f,0.1884f,0.9972f,0.6514f,-0.3628f,-0.1061f,0.4645f,-0.4039f,-0.2086f,-0.284f,-0.1877f,-0.126f,0.0979f,0.0405f,-0.1905f,-0.2353f,-0.4563f,-0.7091f,-0.6883f,-0.2313f,0.0934f,-0.2408f,-0.4884f,-0.3554f,0.5803f,0.5507f,0.6622f,0.9744f,0.533f,1.084f,0.7533f,-0.2063f,-0.4808f,-1.274f,-3.226f,-4.3179f,-4.5614f,-4.2884f,-4.2246f,-3.982f,-2.6787f,-1.7222f,-3.0642f,-3.9019f},{1.9431f,1.99f,1.5164f,0.8797f,1.14f,0.4822f,-0.2663f,-0.5334f,0.5675f,0.9544f,0.7515f,0.9628f,0.9191f,0.7926f,0.0023f,0.1491f,0.2831f,0.5102f,0.3098f,0.2197f,0.5968f,0.5297f,0.4619f,0.5448f,-0.0934f,0.386f,0.5851f,0.0684f,-0.7836f,-1.0251f,-0.1573f,0.2526f,-0.0858f,-0.3049f,0.1614f,0.2271f,-0.4839f,-0.6242f,-0.2423f,0.0028f,-0.5202f,0.1202f,-0.2431f,-0.0643f,0.0975f,0.4787f,0.1811f,0.5433f,0.4755f,0.7579f,0.8005f,-0.3972f,-0.4997f,-1.6973f,-3.5543f,-3.9081f,-4.5164f,-4.255f,-4.1241f,-4.1402f,-2.8346f,-2.0929f,-2.9371f,-4.1357f},{1.9981f,1.8273f,1.3999f,0.6232f,1.6719f,1.5727f,0.8436f,-0.0373f,0.2141f,0.4472f,0.7737f,1.3616f,0.688f,0.2911f,0.65f,0.8755f,1.2502f,0.8583f,0.459f,0.7296f,0.8087f,1.0465f,0.3173f,0.6143f,0.1799f,-0.3717f,-0.1136f,0.3561f,0.2165f,-0.3744f,-0.6407f,-0.1799f,0.5426f,-0.23f,-0.9104f,-0.6109f,-0.7045f,-0.0087f,0.0704f,-0.5699f,-0.1016f,0.1844f,0.3603f,-0.1592f,0.4882f,0.6662f,0.6304f,0.7716f,0.9672f,0.7846f,0.6998f,-0.2565f,-0.7002f,-1.6416f,-3.5698f,-3.5396f,-4.4997f,-4.2572f,-3.8886f,-4.076f,-2.5147f,-1.813f,-2.7607f,-4.1687f},{0.8633f,0.7431f,0.8609f,0.8582f,0.889f,0.2143f,0.7646f,0.2954f,0.5983f,0.7086f,0.9437f,1.08f,0.2714f,0.9853f,0.8391f,1.5792f,1.6137f,0.5657f,-0.0043f,0.2086f,0.0592f,0.5875f,0.763f,0.3725f,0.6807f,0.4808f,0.2204f,0.0337f,0.4405f,0.4094f,0.3587f,-0.0025f,0.0325f,-0.3681f,0.0499f,-0.1052f,-0.2334f,0.4301f,-0.2998f,0.0375f,0.1849f,0.2617f,0.2579f,0.4118f,1.0638f,0.9191f,0.3747f,0.8467f,1.4031f,0.9484f,0.7725f,0.1068f,-1.0503f,-2.3066f,-3.7834f,-3.9399f,-4.508f,-4.2653f,-4.0669f,-3.9496f,-2.6327f,-2.3961f,-2.9428f,-4.2074f},{1.3301f,1.2037f,1.1319f,0.9557f,0.8101f,1.2289f,1.659f,1.621f,0.9699f,0.4822f,0.5763f,0.2347f,0.0106f,0.7086f,1.2305f,1.3399f,0.8552f,1.053f,1.0469f,0.7018f,-0.088f,0.298f,0.8601f,0.6783f,0.6192f,0.4187f,0.1335f,0.174f,0.6751f,0.8096f,0.1068f,0.2311f,-0.1362f,-0.7773f,-0.459f,-0.5708f,-0.2513f,0.0916f,-0.5747f,-0.6443f,-0.3037f,-0.1157f,0.0452f,0.3013f,0.2858f,0.507f,0.0378f,0.626f,0.6628f,0.5823f,0.6535f,0.736f,-0.1678f,-1.6593f,-4.3677f,-4.436f,-4.5467f,-4.1133f,-3.9495f,-3.9644f,-2.7916f,-2.2197f,-3.5372f,-4.2663f},{1.6084f,1.2923f,1.3409f,1.3968f,1.1782f,1.206f,1.2768f,1.1596f,0.9321f,0.1868f,0.3685f,0.9909f,-0.2334f,0.1251f,0.613f,0.4371f,0.4334f,0.3839f,0.7784f,0.2391f,-0.6024f,0.7926f,0.8848f,0.0023f,0.0476f,-0.5106f,-0.1908f,-0.3747f,0.0965f,0.5263f,0.214f,-0.678f,-0.1842f,0.2073f,-0.8963f,0.1851f,0.2621f,-0.3794f,-0.9972f,0.0284f,0.398f,0.2891f,0.0269f,0.0571f,0.2899f,-0.0024f,0.2633f,0.6105f,0.882f,0.7731f,0.5358f,-0.2739f,-0.9167f,-2.2048f,-3.9902f,-4.4761f,-4.5411f,-4.279f,-4.2472f,-4.2254f,-2.7368f,-2.6126f,-3.7709f,-4.1657f},{0.9882f,0.6697f,-0.109f,-0.8286f,0.9297f,0.4765f,-0.105f,0.3156f,-0.057f,0.3486f,1.073f,1.3874f,0.8016f,-0.0548f,0.59f,0.6507f,-0.158f,1.0153f,1.3729f,0.941f,0.8428f,0.8666f,-0.3661f,-0.1052f,0.2834f,0.1241f,-0.0465f,-0.3429f,0.5589f,0.7437f,0.2868f,-0.4207f,-0.3207f,-0.0855f,-0.1737f,-0.0363f,-0.075f,-0.6615f,-0.961f,0.108f,0.4769f,-0.1822f,-0.1825f,0.4932f,0.277f,-0.0112f,0.2676f,0.7284f,0.4846f,0.6122f,0.3973f,-0.2729f,-0.4738f,-2.3719f,-3.6177f,-4.3884f,-4.5622f,-4.372f,-3.9319f,-4.023f,-3.103f,-2.5786f,-3.983f,-4.0933f},{1.8667f,1.894f,1.5248f,0.5902f,0.0694f,1.0585f,0.9643f,0.0299f,-0.4399f,-0.2213f,0.2792f,0.9456f,0.9331f,0.2776f,0.3105f,0.1492f,0.2976f,1.111f,1.6747f,0.7611f,0.0741f,0.6564f,0.803f,0.4692f,0.4205f,0.8158f,0.7497f,0.8214f,0.5119f,0.0337f,-0.1665f,0.1107f,0.1234f,-0.0018f,0.0574f,-0.0056f,-0.2476f,-0.52f,-0.4174f,0.5883f,0.5325f,0.015f,-0.0576f,-0.2683f,0.2842f,0.5865f,0.2149f,0.4654f,0.4048f,0.6817f,0.6533f,0.3729f,-0.9497f,-2.4415f,-3.7394f,-4.3965f,-4.5683f,-4.1618f,-3.913f,-4.0877f,-2.5079f,-2.2522f,-3.8982f,-4.1137f},{1.6494f,1.2187f,0.6828f,0.3423f,0.1878f,1.1557f,1.2251f,0.136f,-0.3341f,-0.6147f,-0.4099f,0.4624f,0.6489f,0.1868f,-0.3421f,0.0955f,0.7306f,0.6819f,1.369f,1.2385f,1.0211f,0.6618f,0.9504f,0.8016f,0.1453f,-0.7652f,0.5281f,0.8042f,0.5115f,-0.3888f,-0.9454f,-0.1652f,0.3683f,0.5096f,-0.1046f,-0.502f,0.6965f,0.2824f,-0.3027f,0.4674f,1.0361f,0.4921f,0.0393f,-0.5797f,0.0791f,0.9262f,0.6914f,0.6994f,0.5606f,0.8736f,0.7899f,0.5145f,-0.3666f,-1.8312f,-4.0856f,-4.4412f,-4.5635f,-4.3223f,-4.354f,-4.3139f,-2.6297f,-2.5961f,-4.0463f,-4.0791f},{0.3857f,0.8547f,0.707f,0.4463f,0.1277f,1.2242f,1.2127f,0.3923f,0.7896f,1.1313f,0.8641f,0.5793f,-0.0272f,0.5983f,0.2631f,-0.1138f,0.0566f,0.3198f,1.4219f,1.1416f,0.7048f,0.3535f,0.6468f,1.0209f,0.6432f,0.77f,0.4576f,0.1784f,-0.1487f,0.055f,-0.602f,0.0344f,0.0003f,0.0117f,-0.6541f,-0.4972f,0.1544f,0.627f,0.5442f,-0.068f,0.9191f,0.2278f,0.2575f,-0.2621f,0.0503f,0.1254f,0.0577f,0.9761f,0.953f,1.2835f,1.1281f,0.9022f,-0.4053f,-1.6987f,-4.3768f,-4.4952f,-4.563f,-4.5574f,-4.5362f,-4.4127f,-2.3116f,-2.5882f,-4.1515f,-4.2358f},{1.7556f,1.3318f,1.2466f,1.0544f,-0.071f,-0.505f,0.3837f,0.5722f,0.1235f,0.1314f,1.0113f,1.1189f,1.2271f,1.4105f,0.9029f,0.2685f,-0.5259f,0.3894f,1.0381f,0.7146f,0.8014f,0.4059f,0.3848f,0.7549f,0.8717f,0.8313f,0.5162f,-0.2027f,0.2982f,0.3216f,-0.3276f,-0.124f,-0.0913f,0.5735f,0.1057f,-0.4106f,-0.4548f,0.0969f,-0.4548f,-0.2198f,0.6305f,0.5804f,0.1858f,-0.0456f,0.3801f,0.292f,0.7611f,0.8832f,0.8117f,0.8023f,0.4238f,0.0825f,-0.8491f,-2.1383f,-3.8553f,-4.2478f,-4.5769f,-4.5764f,-4.5779f,-4.4493f,-2.831f,-2.6892f,-4.1831f,-4.2761f},{1.8137f,1.5218f,1.0641f,0.0421f,-1.3304f,-1.688f,-0.8796f,-0.2648f,-0.887f,-0.4918f,0.5641f,0.8184f,0.773f,0.6932f,0.2113f,1.1172f,0.3917f,0.2123f,0.4081f,0.1044f,-0.2814f,0.3639f,0.9721f,0.5894f,-0.0727f,0.5132f,-0.1108f,-0.1608f,0.3023f,0.1888f,-0.1541f,0.3005f,0.0475f,-0.0805f,-0.3478f,-0.2354f,-0.2631f,0.0235f,0.2146f,0.65f,0.2103f,-0.0603f,-0.0783f,-0.2585f,-0.049f,0.472f,0.7485f,1.169f,1.005f,0.5245f,-0.1238f,0.1473f,-0.6738f,-2.003f,-3.3902f,-4.1474f,-4.5659f,-4.5762f,-4.5569f,-4.4236f,-2.5966f,-2.4311f,-4.162f,-4.1662f},{1.4988f,1.6828f,1.1693f,1.3988f,1.4547f,1.4606f,1.2159f,0.4893f,-0.1498f,-1.1155f,-0.0348f,1.1305f,0.864f,1.2761f,0.8491f,1.0728f,0.9382f,-0.1671f,-0.38f,0.3271f,0.6179f,0.3581f,0.5995f,0.3677f,0.6217f,0.3402f,-0.6528f,-0.1639f,-0.002f,0.2442f,-0.0715f,-0.7818f,-0.5472f,-0.7104f,0.0147f,-0.5762f,-0.9093f,-0.7908f,-0.1001f,0.491f,0.5119f,0.2458f,-0.7291f,-0.6608f,-0.3104f,0.3632f,0.6493f,1.1459f,0.7626f,0.6608f,0.3166f,-0.0585f,-0.5569f,-2.4014f,-3.3974f,-3.8972f,-4.5511f,-4.5108f,-4.4914f,-4.4186f,-2.3954f,-2.6641f,-3.9836f,-4.2176f},{2.0441f,1.9307f,1.4663f,0.4182f,0.3711f,1.4498f,1.515f,0.9212f,0.4071f,0.593f,0.5577f,0.5949f,0.7195f,1.3066f,1.0637f,0.9024f,0.0725f,0.0873f,0.5577f,1.0083f,0.58f,-0.2395f,-0.3428f,-0.6051f,0.3334f,0.6495f,0.5673f,0.7615f,0.2891f,0.1828f,0.3549f,0.5581f,-0.2032f,-0.4009f,-0.1021f,-0.8504f,-0.5774f,0.0527f,0.2992f,0.2657f,-0.2334f,-0.2905f,-0.0637f,0.2026f,0.5708f,0.5778f,0.6127f,0.6782f,0.4264f,0.5327f,0.4518f,-0.4633f,-0.7011f,-2.432f,-3.2928f,-3.7781f,-4.5563f,-4.441f,-4.2546f,-4.1805f,-2.609f,-2.3994f,-3.7816f,-4.1777f},{1.5708f,1.1661f,1.2801f,1.2114f,0.8732f,0.5261f,0.1652f,0.4868f,-0.2067f,0.5368f,0.5734f,0.1223f,-0.157f,0.6739f,0.5647f,0.2813f,-0.5588f,-0.3488f,0.071f,0.4419f,-0.3237f,0.3789f,0.3376f,0.1073f,0.4109f,0.1251f,0.0815f,0.5114f,0.3021f,-0.0781f,-0.518f,0.4057f,0.241f,-0.3409f,-0.6352f,-0.5358f,-0.1612f,0.0638f,-0.4658f,-0.4742f,0.1139f,-0.4604f,-0.5464f,-0.1528f,0.2326f,-0.0373f,0.0122f,0.9172f,0.4276f,0.6713f,0.5635f,-0.0826f,-0.9071f,-2.9263f,-3.6381f,-3.8554f,-4.5108f,-4.4136f,-4.2496f,-4.1059f,-2.7499f,-2.3002f,-3.7706f,-4.1819f},{-0.5955f,0.6987f,0.8714f,-0.3156f,0.1707f,0.7639f,1.3202f,1.1949f,0.9769f,0.872f,-0.2662f,-0.734f,-0.1105f,0.0391f,-0.8111f,-0.5455f,0.0166f,0.8649f,1.1448f,0.1753f,-0.1496f,0.4548f,0.7707f,0.6132f,0.7033f,0.4951f,-0.1181f,-0.2407f,0.42f,0.1225f,-0.5486f,-0.2474f,-0.0409f,-0.0879f,-0.0469f,-0.049f,-0.2312f,-0.0812f,-0.6006f,-0.6441f,0.5728f,-0.0688f,-1.115f,-0.0059f,0.0347f,-0.2406f,0.4343f,1.0476f,0.5469f,0.2583f,0.7592f,0.0534f,-0.8792f,-2.829f,-3.5742f,-3.6392f,-4.4792f,-4.373f,-4.2076f,-4.2392f,-2.1091f,-2.1756f,-3.6998f,-4.2129f},{0.9901f,1.3391f,1.4015f,0.7227f,0.5477f,0.4267f,1.1059f,1.2521f,0.6457f,0.9532f,1.1459f,0.78f,-0.1639f,-0.1174f,-0.1398f,0.4966f,0.7572f,0.5905f,1.1381f,0.6422f,0.1098f,0.6195f,0.8037f,0.8068f,-0.0948f,-0.0755f,0.2548f,-0.102f,0.374f,-0.1375f,-0.8235f,-0.158f,-0.6481f,-0.4088f,-0.5062f,-0.4557f,-0.1358f,0.3814f,-0.0682f,-0.2301f,0.0993f,-0.4576f,0.1896f,0.3878f,0.2046f,0.713f,0.4925f,1.2701f,1.1325f,0.2754f,0.3352f,0.0452f,-0.8059f,-2.6721f,-3.6137f,-3.5828f,-4.4648f,-4.4295f,-4.1552f,-4.2345f,-2.7391f,-2.2585f,-3.6547f,-4.1762f},{0.8323f,0.8324f,0.9191f,0.6689f,1.2946f,1.5291f,1.0236f,0.4929f,0.7599f,0.4802f,0.6615f,0.0144f,0.085f,0.6991f,0.3632f,1.0699f,1.0623f,0.3589f,0.5067f,0.8475f,-0.3119f,0.5298f,0.9156f,0.0018f,-0.6937f,-0.1204f,0.5635f,0.5827f,0.4516f,-0.5953f,-0.3599f,-0.6536f,-0.5457f,-0.376f,-0.5789f,-0.3085f,-0.0646f,0.4758f,0.3935f,-0.1095f,0.2817f,-0.2934f,0.2219f,0.4223f,0.2876f,0.5606f,0.5167f,0.9461f,0.5302f,0.3303f,0.1796f,0.061f,-1.0007f,-2.6933f,-3.7542f,-3.8834f,-4.4842f,-4.4539f,-4.2168f,-4.3079f,-3.0593f,-2.5089f,-3.7072f,-4.0244f},{1.6497f,1.5247f,1.3479f,1.4285f,1.7137f,1.7057f,1.2124f,0.7412f,0.5883f,-0.3715f,-0.2652f,0.2498f,0.18f,0.2025f,0.3395f,0.9211f,0.9533f,0.7088f,0.4594f,0.1921f,0.6253f,0.6945f,0.7126f,0.0385f,-0.0927f,0.0803f,0.5191f,0.1022f,0.1145f,-0.1895f,-0.156f,0.373f,0.5914f,0.4791f,-0.4078f,-0.7377f,-0.105f,-0.0887f,0.0768f,0.0192f,-0.5387f,-0.1723f,-0.0006f,-0.146f,-0.1325f,0.6435f,0.9428f,1.1837f,1.1295f,0.7011f,0.8057f,0.2187f,-0.9616f,-2.6174f,-3.2829f,-3.4924f,-4.5503f,-4.5516f,-4.5128f,-4.4273f,-2.7544f,-2.4481f,-3.8153f,-4.2203f},{1.4068f,0.9939f,1.4071f,1.1295f,1.0362f,0.8841f,0.3412f,0.5431f,1.0153f,0.9694f,0.4908f,0.5102f,0.2368f,0.7862f,0.9417f,0.8294f,0.5163f,0.8264f,0.8662f,0.1113f,0.3967f,0.9113f,0.5807f,-0.8844f,0.3004f,0.2381f,-0.0778f,0.1983f,0.476f,0.0452f,-0.1342f,-0.0473f,-0.0391f,-0.0668f,0.0133f,-0.1644f,0.4214f,0.4066f,0.1832f,0.4815f,0.1841f,0.4066f,-0.2097f,-0.3921f,-0.307f,0.2665f,0.7937f,1.2065f,0.7245f,0.6435f,-0.0815f,-0.0364f,-0.6968f,-2.877f,-3.3404f,-3.812f,-4.5245f,-4.4791f,-4.423f,-4.4456f,-2.8293f,-2.9266f,-3.9478f,-4.1f},{1.6738f,1.3097f,0.9426f,1.1968f,1.1323f,0.8239f,0.2134f,0.8241f,1.512f,1.2579f,0.7924f,0.2851f,0.1952f,0.7892f,0.6151f,1.5752f,1.2937f,1.0277f,0.6994f,0.9769f,1.0906f,0.2971f,0.3463f,0.8421f,0.6901f,0.4209f,-0.0722f,-1.2175f,-0.3631f,-0.141f,-0.3743f,-0.0021f,-0.1923f,-0.3246f,-0.2295f,-0.1121f,0.1247f,0.2529f,0.0699f,-0.0091f,0.1865f,-0.0106f,-0.333f,0.1964f,0.2269f,-0.0528f,0.0931f,0.9795f,0.2828f,0.5229f,0.4734f,-0.0269f,-0.7774f,-2.7424f,-3.1733f,-3.6141f,-4.4761f,-4.3651f,-4.225f,-4.3901f,-2.9438f,-2.9912f,-4.1227f,-4.2301f},{0.3623f,0.7034f,0.4301f,1.1528f,1.2843f,0.8711f,0.1559f,0.4463f,0.8704f,0.7667f,0.9654f,1.2037f,0.8385f,0.1394f,1.0121f,0.8129f,0.1978f,0.8793f,0.5038f,0.5667f,0.389f,0.563f,1.0571f,0.692f,0.6107f,0.3303f,0.2801f,0.0121f,0.1365f,-0.0694f,-0.2112f,-0.276f,-0.2934f,-0.3099f,-0.1956f,-0.798f,0.2812f,0.1131f,0.1457f,-0.0396f,-0.422f,-0.2708f,-0.143f,-0.5409f,-0.1684f,-0.2987f,0.2732f,0.648f,0.8369f,0.8405f,0.47f,-0.0901f,-0.899f,-3.1189f,-3.3206f,-3.7171f,-4.4846f,-4.379f,-4.2407f,-4.3476f,-3.4431f,-3.3574f,-4.188f,-4.2444f},{1.7738f,1.6476f,1.3628f,1.3196f,1.7152f,1.675f,1.4993f,1.3994f,1.2496f,0.4683f,0.4579f,0.3081f,-0.1056f,-0.3753f,-0.3814f,0.4489f,0.0765f,0.2904f,0.7929f,0.2839f,0.2284f,-0.0882f,0.36f,0.1615f,0.1896f,0.6297f,-0.1263f,-0.0234f,0.6946f,0.1809f,0.2054f,0.571f,-0.0471f,-0.4889f,-0.1034f,-0.6978f,-0.0844f,0.2946f,-0.2329f,0.533f,0.4477f,-0.2496f,-0.4068f,0.0722f,-0.1298f,-0.5055f,-0.0123f,0.7014f,0.3669f,0.2504f,-0.1352f,-0.1779f,-0.7143f,-3.4387f,-3.8036f,-4.0017f,-4.5164f,-4.4541f,-4.4699f,-4.4562f,-3.1112f,-2.706f,-4.0301f,-4.1426f},{1.0619f,1.1636f,1.2529f,0.9204f,1.279f,1.4284f,0.9239f,1.1385f,1.2776f,0.9411f,1.0091f,0.5938f,-0.2891f,0.0665f,-0.2038f,-0.2054f,0.2792f,0.4544f,0.7271f,0.3652f,0.2546f,0.9748f,1.5526f,1.324f,0.0263f,0.3428f,0.3357f,0.0602f,0.0026f,-0.6222f,-1.1127f,-0.1492f,-0.129f,-0.36f,-0.3683f,-0.1441f,-0.0712f,-0.3064f,-0.1386f,-0.0954f,-0.2657f,-0.6999f,-0.3041f,-0.2959f,-0.1542f,-0.6365f,-0.049f,0.0829f,0.4745f,0.0954f,0.2795f,0.1874f,-0.8405f,-3.1711f,-4.4952f,-4.5474f,-4.5575f,-4.5635f,-4.5552f,-4.4508f,-2.8239f,-2.4682f,-3.9945f,-4.1084f},{1.1025f,1.5439f,1.3205f,1.2733f,1.4341f,1.0275f,0.8432f,0.6027f,-0.1333f,0.4047f,0.8828f,0.9529f,0.0617f,0.6315f,0.1736f,0.2189f,0.4553f,1.2105f,1.0945f,0.6474f,0.0499f,0.2907f,0.6863f,1.0844f,0.588f,0.1356f,-0.1021f,0.1499f,0.4927f,0.0832f,-0.5355f,-0.8375f,-0.3621f,0.2246f,-0.4159f,-0.402f,0.0538f,-0.1073f,-0.2143f,0.1957f,-0.0118f,-0.5529f,-0.5854f,-0.7092f,-0.8589f,-0.1715f,0.2718f,1.0663f,0.1823f,0.5794f,0.508f,0.5644f,-0.5786f,-3.0473f,-4.5427f,-4.5794f,-4.5681f,-4.5682f,-4.5664f,-4.474f,-2.9492f,-2.4394f,-3.9835f,-4.1239f},{0.4916f,0.8972f,1.2963f,1.6194f,1.8342f,1.652f,1.0428f,0.414f,0.3841f,0.4625f,0.4126f,-0.0026f,0.262f,0.4014f,-0.4477f,0.6937f,1.1489f,0.6444f,0.6698f,-0.3371f,-0.7998f,-1.0067f,-0.1836f,0.2111f,0.5426f,0.4895f,-0.1357f,0.3249f,0.3061f,-0.6978f,-0.2817f,0.0256f,-0.2434f,-0.1497f,-0.2781f,0.0752f,-0.2068f,0.1525f,0.4555f,0.6741f,0.3164f,-0.496f,-0.9605f,-0.5974f,-0.4347f,0.3989f,0.311f,0.7323f,0.5409f,0.3098f,0.4982f,0.4754f,-0.2777f,-2.2645f,-4.4382f,-4.4967f,-4.5681f,-4.5726f,-4.5643f,-4.4707f,-2.8973f,-2.3176f,-3.7004f,-4.1317f},{1.19f,0.8765f,0.5227f,0.9058f,0.9789f,0.5869f,1.5849f,1.6413f,0.5293f,-0.0518f,-0.301f,0.3168f,0.6104f,0.8294f,0.8468f,0.7471f,0.4192f,0.4196f,0.7967f,0.522f,0.1613f,0.4472f,0.653f,0.0741f,0.2226f,0.5925f,0.4635f,0.397f,0.6167f,0.2121f,-0.7473f,-0.062f,-0.0316f,-0.2774f,-0.3729f,0.1403f,0.5139f,-0.0341f,-0.4468f,-0.2291f,-0.211f,-0.4688f,-0.2778f,-0.7583f,-0.169f,-0.0707f,0.1271f,0.9678f,0.5967f,0.7268f,0.6912f,0.3777f,-0.5646f,-2.1677f,-3.8616f,-4.2474f,-4.5331f,-4.5676f,-4.5631f,-4.4026f,-2.8943f,-2.3271f,-3.5373f,-4.1068f},{0.0377f,0.5387f,0.379f,0.1766f,0.9085f,0.5587f,1.3772f,1.7308f,1.4565f,0.7532f,0.5518f,0.1917f,0.2624f,0.2803f,1.3558f,1.4757f,-0.0157f,-0.4016f,-0.0019f,0.629f,-0.0353f,0.4691f,1.0156f,0.074f,0.4689f,0.4945f,0.4474f,0.4413f,-0.1009f,-0.7695f,-0.1517f,0.1213f,-0.3851f,-0.2886f,-0.7218f,-0.0354f,-0.4896f,-0.4903f,-0.2886f,-0.5984f,-0.1757f,-0.3447f,-0.3577f,0.2157f,0.0281f,0.0202f,0.1489f,0.797f,0.5892f,0.4537f,0.196f,0.1731f,-0.4954f,-2.1186f,-3.3785f,-3.5341f,-4.4085f,-4.5608f,-4.548f,-4.447f,-2.889f,-2.2601f,-3.3152f,-4.2007f},{2.1102f,1.8135f,1.1624f,0.8583f,1.2911f,1.1667f,0.4507f,0.5532f,0.8444f,0.7973f,0.5338f,0.4819f,-0.344f,0.7435f,0.812f,0.6615f,1.1865f,0.7781f,0.4799f,1.2099f,0.8084f,0.5998f,1.1214f,0.3714f,0.222f,0.1221f,0.2955f,0.3281f,-0.0984f,0.1418f,-0.1237f,-0.0068f,-0.1497f,-0.2361f,-0.216f,-0.3817f,-0.3546f,-0.2421f,-0.054f,0.6372f,0.0771f,-0.2311f,-0.5008f,-0.0727f,-0.8068f,-0.0014f,0.6502f,0.6161f,0.6665f,0.8969f,0.4574f,0.1274f,-0.988f,-1.7834f,-3.2493f,-3.5302f,-4.3266f,-4.563f,-4.5701f,-4.4465f,-3.0226f,-2.2742f,-3.199f,-4.1917f},{1.2239f,1.4224f,1.2429f,1.1322f,1.2703f,0.6157f,-0.0972f,0.7043f,1.1677f,1.4462f,1.3454f,0.9443f,0.3577f,0.7348f,0.3382f,0.2647f,0.6675f,0.9432f,0.8008f,0.38f,0.3138f,0.6865f,0.6273f,0.4068f,0.5785f,0.6782f,0.1001f,0.3181f,0.524f,0.4586f,0.2194f,-0.722f,-0.2329f,-0.0434f,-0.0896f,0.1019f,0.0411f,0.0164f,0.3201f,0.1966f,0.7033f,0.6738f,0.167f,-0.1064f,-0.7448f,0.0683f,0.3794f,0.5777f,0.0396f,0.6046f,0.7366f,0.2373f,-0.7904f,-2.1894f,-3.8021f,-3.6525f,-4.4095f,-4.5649f,-4.5711f,-4.4611f,-3.2484f,-2.3279f,-3.2408f,-4.2198f},{1.6588f,1.483f,0.9854f,0.9662f,1.5591f,1.0452f,0.5156f,0.2962f,-0.2198f,-0.3325f,-0.1181f,0.12f,0.8077f,1.3912f,0.6914f,-0.0622f,0.4741f,0.8607f,0.2807f,0.1717f,0.5524f,0.6793f,0.6983f,-0.0304f,0.3604f,0.3064f,0.4449f,-0.0196f,-0.0964f,0.1894f,-0.0349f,-0.3009f,-0.6473f,-0.3985f,-0.0389f,0.1291f,-0.4809f,-0.3545f,0.3969f,-0.1419f,-0.0589f,0.2821f,0.2567f,-0.9002f,-0.8995f,-0.0253f,0.2682f,0.9014f,0.5578f,0.9002f,0.7655f,0.2777f,-0.7673f,-1.8013f,-3.8211f,-4.0111f,-4.5517f,-4.5366f,-4.5667f,-4.4706f,-3.4317f,-2.3616f,-3.1986f,-4.1438f},{1.5676f,1.2008f,1.2935f,1.6751f,1.4326f,0.2573f,-0.9583f,-0.0538f,-0.4465f,0.3165f,0.1848f,-0.1538f,-0.0516f,1.2731f,0.8239f,0.0927f,0.9268f,1.1525f,1.1263f,0.9307f,-0.1407f,0.2832f,0.4377f,0.7727f,0.5583f,0.0417f,-0.0584f,0.432f,0.7993f,0.3651f,-0.244f,-0.8548f,-0.145f,0.3966f,0.1701f,-0.0803f,-0.0497f,-0.0396f,0.3532f,0.1705f,0.0555f,-0.4117f,0.218f,-0.5514f,-0.0611f,0.6348f,0.2583f,0.6743f,0.4974f,0.437f,0.33f,-0.2258f,-1.0497f,-1.6561f,-3.5796f,-4.0158f,-4.5169f,-4.3921f,-4.4148f,-4.3143f,-3.4326f,-2.3182f,-3.0969f,-4.2384f},{1.07f,-0.3061f,0.136f,0.8686f,1.2473f,1.1529f,0.8734f,0.3704f,0.2645f,0.5498f,-0.1309f,-0.2135f,0.2669f,1.3012f,1.0074f,0.2063f,1.0199f,1.4177f,1.303f,0.4291f,-0.2388f,-0.3311f,0.2548f,1.014f,0.3376f,-0.3224f,0.3847f,0.4507f,-0.1661f,-0.148f,0.0096f,-0.1191f,-0.5729f,-0.405f,0.0631f,-0.2569f,-0.1504f,-0.2549f,-0.1324f,-0.2126f,-0.1322f,-0.6145f,-0.1678f,-0.7518f,0.1409f,0.8913f,0.6864f,0.9777f,-0.1329f,-0.1603f,0.3437f,0.0392f,-0.9609f,-2.5416f,-3.4905f,-3.5516f,-4.5055f,-4.3283f,-4.2584f,-4.1242f,-3.4624f,-2.5376f,-3.2879f,-4.2482f},{1.0385f,0.316f,0.4554f,0.6448f,1.0188f,0.776f,0.4514f,0.7368f,1.0142f,0.34f,0.1542f,0.7575f,0.5892f,0.0918f,-0.1113f,0.2469f,0.9046f,0.8595f,0.1366f,0.3735f,0.5841f,0.8116f,0.6701f,0.5454f,0.5766f,0.6689f,0.0618f,-1.1846f,-1.1298f,-0.6784f,-0.2924f,-0.0239f,-0.5797f,-0.2121f,-0.0119f,-0.4823f,-0.287f,-0.0944f,-0.014f,-0.1768f,-0.1385f,-0.6656f,-0.6052f,-0.5978f,-0.0776f,0.4641f,0.5889f,0.717f,0.3866f,0.321f,0.1845f,-0.1901f,-1.1014f,-1.6243f,-3.2686f,-3.9219f,-4.5092f,-4.2369f,-4.2174f,-4.1867f,-3.5528f,-2.3899f,-3.3395f,-4.2708f},{1.3855f,0.8595f,0.1812f,0.4186f,1.1115f,0.9805f,0.4023f,0.2484f,0.2607f,0.6042f,1.026f,0.2628f,-0.4282f,0.8524f,0.7476f,0.8105f,0.411f,0.2974f,0.3662f,0.1819f,0.5433f,0.2555f,0.1304f,0.0707f,0.3354f,0.4077f,0.1717f,-0.5525f,-0.4385f,0.0115f,-0.356f,-0.2387f,-0.9183f,-0.721f,0.0179f,-0.7502f,-0.4811f,0.2464f,0.2708f,-0.018f,0.3897f,0.0978f,-0.7443f,-0.5244f,-0.332f,0.1474f,0.2171f,0.958f,0.5772f,0.3492f,0.4799f,0.3675f,-0.6508f,-1.5642f,-3.9511f,-4.4272f,-4.5458f,-4.4586f,-4.4632f,-4.3925f,-3.1286f,-2.8154f,-3.6069f,-4.3103f},{0.4765f,-0.2961f,0.3004f,1.1316f,1.322f,0.6922f,-0.439f,-1.2902f,0.2891f,1.0691f,0.685f,0.0371f,0.1275f,1.0268f,1.0379f,0.381f,0.0744f,0.3318f,0.651f,0.6097f,0.2761f,0.977f,0.3659f,0.0222f,0.3317f,0.0752f,0.1881f,0.2689f,0.3396f,-0.1215f,0.4368f,-0.0012f,0.0383f,-0.0986f,-1.0268f,-0.5088f,-0.4332f,-0.7133f,-0.3989f,-0.1951f,0.3424f,-0.2088f,-0.5135f,-0.6054f,-0.2897f,0.414f,0.5458f,0.6032f,0.6446f,-0.1093f,0.2326f,-0.1715f,-1.099f,-2.4585f,-4.1671f,-4.4211f,-4.5546f,-4.5756f,-4.5673f,-4.5072f,-2.9245f,-2.5315f,-3.6246f,-4.251f},{1.5672f,1.0462f,-0.6697f,1.319f,1.7052f,1.0675f,-0.323f,0.1145f,-0.0089f,0.1977f,0.5358f,-0.2533f,-0.0403f,0.8866f,0.6761f,1.0057f,0.4035f,0.6971f,0.6419f,0.2239f,0.8999f,0.4055f,0.2456f,-0.1916f,-0.0046f,0.0521f,0.5632f,0.0612f,-0.2596f,-0.1566f,0.239f,0.0129f,-0.7457f,-0.6717f,-0.4223f,-0.0491f,-0.1386f,0.3044f,-0.1746f,-0.0301f,0.1702f,-0.7116f,-0.5075f,-0.0599f,-0.2922f,-0.6543f,0.0244f,0.1863f,0.2523f,0.5265f,0.1271f,-0.1835f,-1.4565f,-2.2143f,-3.7616f,-4.2998f,-4.5539f,-4.5554f,-4.568f,-4.4923f,-3.1166f,-2.6554f,-4.0661f,-4.2955f},{1.5414f,-1.2072f,0.6014f,1.1094f,1.5265f,1.4467f,0.8857f,0.4838f,0.3996f,-0.3062f,0.0046f,-0.149f,0.1167f,0.3102f,-0.2156f,0.139f,0.355f,0.6314f,-0.1561f,0.5401f,-0.1316f,0.3916f,0.6452f,0.8361f,-0.2037f,-0.478f,-0.3971f,0.2663f,-0.1881f,-0.1273f,-0.0419f,-0.5726f,-0.568f,-0.7589f,-0.6099f,-0.6095f,-0.7063f,-0.2086f,-0.2692f,0.4035f,-0.2033f,-0.2755f,-0.3569f,-0.1459f,-0.2985f,-0.0151f,-0.3837f,0.5021f,0.3601f,0.5209f,-0.2627f,-0.3404f,-1.2121f,-1.7705f,-3.5315f,-4.2473f,-4.5524f,-4.5377f,-4.5602f,-4.4982f,-3.0271f,-2.3832f,-4.0524f,-4.2543f}}};
//        float[][] output = new float[1][128];
//        float[][] output2 = new float[1][128];
//        System.out.println("Jerry MainActivity.java: before loading tflite");
//        try (Interpreter tflite_snore_prediction = new Interpreter(loadModelFile(getAssets(), VGG_EXTRACT_MODEL_PATH))) {
//            System.out.println("Jerry MainActivity.java: after loading tflite");
//            tflite_snore_prediction.run(input, output);
//            tflite_snore_prediction.run(input, output2);
//        }
//        System.out.println(Arrays.deepToString(output));
//        System.out.println("Jerry MainActivity.java: finish tflite testing");
//        System.out.println(Arrays.deepToString(output2));



//        // Use it everytime before python call
//        if (! Python.isStarted()) {
//            Python.start(new AndroidPlatform(this));
//        }
//        Python py = Python.getInstance();
//        PyObject pyf = py.getModule("audio_to_prediction"); // here write the name of the python file, in this case, my file is hello.py
//        PyObject obj = pyf.callAttr("extract_and_predict", wav); // here write the function name
//
//        textView = findViewById(R.id.text);
//        textView.setText(obj.toString());
    }

    public float[] frameMultiSeconds(float[] pred_single_second, int frameN){
        float[] res = new float[pred_single_second.length - frameN + 1];
        if (frameN >= pred_single_second.length) {
            return new float[]{sum(pred_single_second) / pred_single_second.length};
        }else{
            for (int i=0; i<res.length; i++){
                float[] tmp = Arrays.copyOfRange(pred_single_second, i, i+frameN);
                res[i] = Math.round((sum(tmp) / tmp.length) *1000)/1000.0f;
            }
        }
        return res;
    }

    public float sum(float[] array) {
        float sum = 0;
        for (int i = 0; i < array.length; i++) {
            sum += array[i];
        }
        return sum;
    }

    public MappedByteBuffer loadModelFile(AssetManager assetManager, String modelPath) throws IOException {
        // Load tflite helper function
        AssetFileDescriptor fileDescriptor = assetManager.openFd(modelPath);
        FileInputStream inputStream = new FileInputStream(fileDescriptor.getFileDescriptor());
        FileChannel fileChannel = inputStream.getChannel();
        long startOffset = fileDescriptor.getStartOffset();
        long declaredLength = fileDescriptor.getDeclaredLength();
        return fileChannel.map(FileChannel.MapMode.READ_ONLY, startOffset, declaredLength);
    }


    private boolean checkPermissionFromDevice() {
        int write_external_storage_result = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);
        int read_external_storage_result = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE);
        int record_audio_result = ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO);
        return write_external_storage_result == PackageManager.PERMISSION_GRANTED &&
                record_audio_result == PackageManager.PERMISSION_GRANTED &&
                read_external_storage_result == PackageManager.PERMISSION_GRANTED;
    }


    private void requestPermission() {
        ActivityCompat.requestPermissions(this, new String[]{
            Manifest.permission.WRITE_EXTERNAL_STORAGE,
            Manifest.permission.READ_EXTERNAL_STORAGE,
            Manifest.permission.RECORD_AUDIO
        }, REQUEST_PERMISSION_CODE);
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        switch (requestCode){
            case REQUEST_PERMISSION_CODE:{
                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED)
                    Toast.makeText(this, "Permission Granted. Please reopen app to continue.", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(this, "Permission Denied", Toast.LENGTH_SHORT).show();
            }
        }
    }

    private byte[] short2byte(short[] sData) {
        int shortArrsize = sData.length;
        byte[] bytes = new byte[shortArrsize * 2];
        for (int i = 0; i < shortArrsize; i++) {
            bytes[i * 2] = (byte) (sData[i] & 0x00FF);
            bytes[(i * 2) + 1] = (byte) (sData[i] >> 8);
            sData[i] = 0;
        }
        return bytes;
    }

    private void startRecording() {

        recorder = new AudioRecord(MediaRecorder.AudioSource.MIC,
                RECORDER_SAMPLERATE, RECORDER_CHANNELS,
                RECORDER_AUDIO_ENCODING, BufferElements2Rec * BytesPerElement);

        recorder.startRecording();
        isRecording = true;
        recordingThread = new Thread(new Runnable() {
            public void run() {
                writeAudioDataToFile();
            }
        }, "AudioRecorder Thread");
        recordingThread.start();
    }

    private void writeAudioDataToFile() {
        // Write the output audio in byte

        String pcmPath = pathSave + ".pcm";
        short sData[] = new short[BufferElements2Rec];

        FileOutputStream os = null;
        try {
            os = new FileOutputStream(pcmPath);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        while (isRecording) {
            // gets the voice output from microphone to byte format

            recorder.read(sData, 0, BufferElements2Rec);
            System.out.println("Short wirting to file" + sData.toString());
            try {
                // // writes the data to file from buffer
                // // stores the voice buffer
                byte bData[] = short2byte(sData);
                os.write(bData, 0, BufferElements2Rec * BytesPerElement);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        try {
            os.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void stopRecording() {
        // stops the recording activity
        if (null != recorder) {
            isRecording = false;
            recorder.stop();
            recorder.release();
            recorder = null;
            recordingThread = null;
        }
    }

    private void enableButton(int id, boolean isEnable) {
        ((Button) findViewById(id)).setEnabled(isEnable);
    }

    private void enableButtons(boolean isRecording) {
        enableButton(R.id.btnStart, !isRecording);
        enableButton(R.id.btnStop, isRecording);
    }





    // Convert PCM to WAV
    // https://stackoverflow.com/questions/37281430/how-to-convert-pcm-file-to-wav-or-mp3
    private void rawToWave(final File rawFile, final File waveFile) throws IOException {
        byte[] rawData = new byte[(int) rawFile.length()];
        DataInputStream input = null;
        try {
            input = new DataInputStream(new FileInputStream(rawFile));
            input.read(rawData);
        } finally {
            if (input != null) {
                input.close();
            }
        }

        DataOutputStream output = null;
        try {
            output = new DataOutputStream(new FileOutputStream(waveFile));
            // WAVE header
            // see http://ccrma.stanford.edu/courses/422/projects/WaveFormat/
            writeString(output, "RIFF"); // chunk id
            writeInt(output, 36 + rawData.length); // chunk size
            writeString(output, "WAVE"); // format
            writeString(output, "fmt "); // subchunk 1 id
            writeInt(output, 16); // subchunk 1 size
            writeShort(output, (short) 1); // audio format (1 = PCM)
            writeShort(output, (short) 1); // number of channels
            writeInt(output, 16000); // sample rate
            writeInt(output, RECORDER_SAMPLERATE * 2); // byte rate
            writeShort(output, (short) 2); // block align
            writeShort(output, (short) 16); // bits per sample
            writeString(output, "data"); // subchunk 2 id
            writeInt(output, rawData.length); // subchunk 2 size
            // Audio data (conversion big endian -> little endian)
            short[] shorts = new short[rawData.length / 2];
            ByteBuffer.wrap(rawData).order(ByteOrder.LITTLE_ENDIAN).asShortBuffer().get(shorts);
            ByteBuffer bytes = ByteBuffer.allocate(shorts.length * 2);
            for (short s : shorts) {
                bytes.putShort(s);
            }

            output.write(fullyReadFileToBytes(rawFile));
        } finally {
            if (output != null) {
                output.close();
            }
        }
    }
    byte[] fullyReadFileToBytes(File f) throws IOException {
        int size = (int) f.length();
        byte bytes[] = new byte[size];
        byte tmpBuff[] = new byte[size];
        FileInputStream fis= new FileInputStream(f);
        try {

            int read = fis.read(bytes, 0, size);
            if (read < size) {
                int remain = size - read;
                while (remain > 0) {
                    read = fis.read(tmpBuff, 0, remain);
                    System.arraycopy(tmpBuff, 0, bytes, size - remain, read);
                    remain -= read;
                }
            }
        }  catch (IOException e){
            throw e;
        } finally {
            fis.close();
        }

        return bytes;
    }
    private void writeInt(final DataOutputStream output, final int value) throws IOException {
        output.write(value >> 0);
        output.write(value >> 8);
        output.write(value >> 16);
        output.write(value >> 24);
    }

    private void writeShort(final DataOutputStream output, final short value) throws IOException {
        output.write(value >> 0);
        output.write(value >> 8);
    }

    private void writeString(final DataOutputStream output, final String value) throws IOException {
        for (int i = 0; i < value.length(); i++) {
            output.write(value.charAt(i));
        }
    }

}